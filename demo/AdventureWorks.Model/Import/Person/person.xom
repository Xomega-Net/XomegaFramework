<?xml version="1.0" encoding="UTF-8"?>
<module xmlns="http://www.xomega.net/omodel" xmlns:xfk="http://www.xomega.net/framework"
        xmlns:svc="http://www.xomega.net/svc"
        xmlns:rest="http://www.xomega.net/rest"
        xmlns:ui="http://www.xomega.net/ui"
        xmlns:asp="clr-namespace:System.Web.UI.WebControls;assembly=System.Web"
        xmlns:sql="http://www.xomega.net/sql"
        xmlns:clr="http://www.xomega.net/clr"
        xmlns:edm="http://www.xomega.net/edm"
        name="person">
  <types>
    <type name="person" base="business entity"/>
    <type name="person type" base="enumeration" size="2">
      <enum ref="person type"/>
    </type>
  </types>
  <enums>
    <enum name="person type">
      <item name="Store contact" value="SC"/>
      <item name="Individual customer" value="IN"/>
      <item name="Sales person" value="SP"/>
      <item name="Employee" value="EM"/>
      <item name="Vendor contact" value="VC"/>
      <item name="General contact" value="GC"/>
    </enum>
  </enums>
  <structs>
    <struct name="credentials">
      <param name="email" type="email" required="true"/>
      <param name="password" type="plain password" required="true"/>
      <config>
        <xfk:add-to-object class="AuthenticationObject"/>
      </config>
    </struct>
    <struct name="person info" object="person">
      <param name="business entity id"/>
      <param name="person type"/>
      <param name="first name"/>
      <param name="last name"/>
      <param name="email" type="email" required="true"/>
      <param name="store" type="store"/>
      <param name="vendor" type="vendor"/>
    </struct>
  </structs>
  <objects>
    <object name="person">
      <fields>
        <field name="business entity id" type="person" key="supplied" required="true">
          <config>
            <sql:column name="BusinessEntityID"/>
          </config>
        </field>
        <field name="person type" type="person type" required="true">
          <config>
            <sql:column name="PersonType"/>
          </config>
          <doc>
            <summary>Primary type of person: SC = Store Contact, IN = Individual (retail) customer, SP = Sales person, EM = Employee (non-sales), VC = Vendor contact, GC = General contact</summary>
          </doc>
        </field>
        <field name="name style" type="boolean" required="true">
          <config>
            <sql:column name="NameStyle" default="((0))"/>
          </config>
          <doc>
            <summary>0 = The data in FirstName and LastName are stored in western style (first name, last name) order.  1 = Eastern style (last name, first name) order.</summary>
          </doc>
        </field>
        <field name="title" type="string8">
          <config>
            <sql:column name="Title"/>
          </config>
          <doc>
            <summary>A courtesy title. For example, Mr. or Ms.</summary>
          </doc>
        </field>
        <field name="first name" type="name" required="true">
          <config>
            <sql:column name="FirstName"/>
          </config>
          <doc>
            <summary>First name of the person.</summary>
          </doc>
        </field>
        <field name="middle name" type="name">
          <config>
            <sql:column name="MiddleName"/>
          </config>
          <doc>
            <summary>Middle name or middle initial of the person.</summary>
          </doc>
        </field>
        <field name="last name" type="name" required="true">
          <config>
            <sql:column name="LastName"/>
          </config>
          <doc>
            <summary>Last name of the person.</summary>
          </doc>
        </field>
        <field name="suffix" type="string10">
          <config>
            <sql:column name="Suffix"/>
          </config>
          <doc>
            <summary>Surname suffix. For example, Sr. or Jr.</summary>
          </doc>
        </field>
        <field name="email promotion" type="integer" required="true">
          <config>
            <sql:column name="EmailPromotion" default="((0))"/>
          </config>
          <doc>
            <summary>0 = Contact does not wish to receive e-mail promotions, 1 = Contact does wish to receive e-mail promotions from AdventureWorks, 2 = Contact does wish to receive e-mail promotions from AdventureWorks and selected partners. </summary>
          </doc>
        </field>
        <field name="additional contact info" type="xml">
          <config>
            <sql:column name="AdditionalContactInfo"/>
          </config>
          <doc>
            <summary>Additional contact information about the person stored in xml format. </summary>
          </doc>
        </field>
        <field name="demographics" type="xml">
          <config>
            <sql:column name="Demographics"/>
          </config>
          <doc>
            <summary>Personal information such as hobbies, and income collected from online shoppers. Used for sales analysis.</summary>
          </doc>
        </field>
        <field name="rowguid" type="guid" required="true">
          <config>
            <sql:column name="rowguid" default="(newid())"/>
          </config>
          <doc>
            <summary>ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</summary>
          </doc>
        </field>
        <field name="modified date" type="date time" required="true">
          <config>
            <sql:column name="ModifiedDate" default="(getdate())"/>
          </config>
          <doc>
            <summary>Date and time the record was last updated.</summary>
          </doc>
        </field>
      </fields>
      <operations>
        <operation name="authenticate" type="update">
          <input arg="credentials" struct="credentials"/>
          <config>
            <rest:method not-supported="true"/>
          </config>
          <doc>
            <summary>Authenticates a Person using email and password.</summary>
          </doc>
        </operation>
        <operation name="read" type="read">
          <input>
            <param name="email" type="email" required="true"/>
          </input>
          <output struct="person info"/>
          <config>
            <rest:method not-supported="true"/>
          </config>
          <doc>
            <summary>Reads person info by email as the key.</summary>
          </doc>
        </operation>
      </operations>
      <config>
        <sql:table name="Person.Person"/>
        <edm:customize extend="true"/>
        <svc:customize preserve-on-clean="true" subclass="true"/>
      </config>
      <doc>
        <summary>Human beings involved with AdventureWorks: employees, customer contacts, and vendor contacts.</summary>
      </doc>
      <subobjects>
        <object name="credit card">
          <fields>
            <field name="credit card id" type="credit card" key="reference" required="true">
              <config>
                <sql:column name="CreditCardID"/>
              </config>
              <doc>
                <summary>Credit card identification number. Foreign key to CreditCard.CreditCardID.</summary>
              </doc>
            </field>
            <field name="modified date" type="date time" required="true">
              <config>
                <sql:column name="ModifiedDate" default="(getdate())"/>
              </config>
              <doc>
                <summary>Date and time the record was last updated.</summary>
              </doc>
            </field>
          </fields>
          <operations>
            <operation name="read enum">
              <input>
                <param name="business entity id" type="person" required="true"/>
              </input>
              <output list="true">
                <param name="credit card id"/>
                <param name="description" type="string"/>
                <param name="person name" type="name" required="true"/>
                <param name="card type" type="name" required="true"/>
                <param name="card number" type="credit card number" required="true"/>
                <param name="exp month" type="tiny int" required="true"/>
                <param name="exp year" type="small int" required="true"/>
              </output>
              <config>
                <rest:method verb="GET" uri-template="person/{business entity id}/credit-card/enum"/>
                <xfk:enum-cache enum-name="person credit card" id-param="credit card id"
                                desc-param="description"/>
              </config>
              <doc>
                <summary>Reads enumeration data for Person Credit Card.</summary>
              </doc>
            </operation>
            <doc>
              <summary>A service for querying and managing Person Credit Card objects.</summary>
            </doc>
          </operations>
          <config>
            <sql:table name="Sales.PersonCreditCard">
              <sql:parent-foreign-key delete="no action"/>
            </sql:table>
          </config>
          <doc>
            <summary>Cross-reference table mapping people to their credit card information in the CreditCard table. </summary>
          </doc>
        </object>
      </subobjects>
    </object>
  </objects>
  <xfk:data-objects>
    <xfk:data-object class="AuthenticationObject" customize="true">
      <ui:display>
        <ui:fields field-cols="1">
          <ui:field param="email" access-key="m"/>
          <ui:field param="password" access-key="P"/>
        </ui:fields>
      </ui:display>
    </xfk:data-object>
  </xfk:data-objects>
  <ui:views>
    <ui:view name="LoginView" title="Login" customize="true" child="true">
      <ui:view-model data-object="AuthenticationObject"/>
    </ui:view>
  </ui:views>
</module>