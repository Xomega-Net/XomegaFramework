<?xml version="1.0" encoding="UTF-8"?>
<module xmlns="http://www.xomega.net/omodel"
        xmlns:xfk="http://www.xomega.net/framework"
        xmlns:ui="http://www.xomega.net/ui"
        xmlns:asp="clr-namespace:System.Web.UI.WebControls;assembly=System.Web"
        name="framework">
  <types>
    <type name="operator" base="enumeration">
      <config>
        <xfk:property class="OperatorProperty" namespace="Xomega.Framework.Properties" tsModule="xomega"/>
      </config>
      <enum ref="operators"/>
      <usage generic="true"/>
      <doc>
        <summary>Enumerated operator on a value for the search criteria.</summary>
      </doc>
    </type>
  </types>
  <enums>
    <enum name="operators">
      <properties>
        <property name="sort order">
          <doc>
            <summary>Defines the sort order of the operators with respect to other operators.</summary>
The name should be in synch with the constant AttributeSortOrder defined in the OperatorProperty class.
          </doc>
        </property>
        <property name="addl props" default="0">
          <doc>
            <summary>The number of additional data properties that the operator needs.
0 (default) means it needs no additional values, 1 means it needs a value and 2 is for ranges that need both ends.</summary>
The name should be in synch with the constant AttributeAddlProps defined in the OperatorProperty class.
          </doc>
        </property>
        <property name="multival" default="0">
          <doc>
            <summary>1 if the additional property can be multi-valued, 0 otherwise.</summary>
The name should be in synch with the constant AttributeMultival defined in the OperatorProperty class.
          </doc>
        </property>
        <property name="type" multi-value="true">
          <doc>
            <summary>Fully qualified type of the additional property, which this operator applies to.
It will also apply to all subclasses of this type. Multiple types can be specified.</summary>
The name should be in synch with the constant AttributeType defined in the OperatorProperty class.
          </doc>
        </property>
        <property name="exclude type" multi-value="true">
          <doc>
            <summary>Fully qualified type of the additional property, which this operator does not apply to.
It won't also apply to all subclasses of this type. Multiple exclude types can be specified.
Exclude types should be generally more concrete than include types.</summary>
The name should be in synch with the constant AttributeExcludeType defined in the OperatorProperty class.
          </doc>
        </property>
        <property name="null check" default="0">
          <doc>
            <summary>1 for null checks, otherwise 0 (default).</summary>
The name should be in synch with the constant AttributeNullCheck defined in the OperatorProperty class.
          </doc>
        </property>
      </properties>
      <item name="Is Null" value="NL">
        <doc>
          <summary>Checks if the target value is blank.</summary>
        </doc>
        <prop ref="sort order" value="00"/>
        <prop ref="null check" value="1"/>
      </item>
      <item name="Is Not Null" value="NNL">
        <doc>
          <summary>Checks if the target value is not blank.</summary>
        </doc>
        <prop ref="sort order" value="01"/>
        <prop ref="null check" value="1"/>
      </item>
      <item name="Is Equal To" value="EQ">
        <doc>
          <summary>Checks if the target value is equal to the specified value.</summary>
        </doc>
        <prop ref="sort order" value="10"/>
        <prop ref="addl props" value="1"/>
      </item>
      <item name="Is Not Equal To" value="NEQ">
        <doc>
          <summary>Checks if the target value is not equal to the specified value.</summary>
        </doc>
        <prop ref="sort order" value="11"/>
        <prop ref="addl props" value="1"/>
      </item>
      <item name="Is One Of" value="In">
        <doc>
          <summary>Checks if the target value is one of the values listed.</summary>
        </doc>
        <prop ref="sort order" value="10"/>
        <prop ref="addl props" value="1"/>
        <prop ref="multival" value="1"/>
      </item>
      <item name="Is None Of" value="NIn">
        <doc>
          <summary>Checks if the target value is none of the values listed.</summary>
        </doc>
        <prop ref="sort order" value="12"/>
        <prop ref="addl props" value="1"/>
        <prop ref="multival" value="1"/>
      </item>
      <item name="Is Less Than" value="LT">
        <doc>
          <summary>Checks if the target value is less than the specified values.</summary>
        </doc>
        <prop ref="sort order" value="13"/>
        <prop ref="addl props" value="1"/>
        <prop ref="type" value="BigIntegerProperty"/>
        <prop ref="type" value="IntegerProperty"/>
        <prop ref="type" value="SmallIntegerProperty"/>
        <prop ref="type" value="TinyIntegerProperty"/>
        <prop ref="type" value="DecimalProperty"/>
        <prop ref="exclude type" value="BigIntegerKeyProperty"/>
        <prop ref="exclude type" value="IntegerKeyProperty"/>
        <prop ref="exclude type" value="SmallIntegerKeyProperty"/>
        <prop ref="exclude type" value="TinyIntegerKeyProperty"/>
      </item>
      <item name="Is Less Than Or Equal To" value="LE">
        <doc>
          <summary>Checks if the target value is less than or equal to the specified values.</summary>
        </doc>
        <prop ref="sort order" value="14"/>
        <prop ref="addl props" value="1"/>
        <prop ref="type" value="BigIntegerProperty"/>
        <prop ref="type" value="IntegerProperty"/>
        <prop ref="type" value="SmallIntegerProperty"/>
        <prop ref="type" value="TinyIntegerProperty"/>
        <prop ref="type" value="DecimalProperty"/>
        <prop ref="exclude type" value="BigIntegerKeyProperty"/>
        <prop ref="exclude type" value="IntegerKeyProperty"/>
        <prop ref="exclude type" value="SmallIntegerKeyProperty"/>
        <prop ref="exclude type" value="TinyIntegerKeyProperty"/>
      </item>
      <item name="Is Greater Than" value="GT">
        <doc>
          <summary>Checks if the target value is greater than the specified values.</summary>
        </doc>
        <prop ref="sort order" value="15"/>
        <prop ref="addl props" value="1"/>
        <prop ref="type" value="BigIntegerProperty"/>
        <prop ref="type" value="IntegerProperty"/>
        <prop ref="type" value="SmallIntegerProperty"/>
        <prop ref="type" value="TinyIntegerProperty"/>
        <prop ref="type" value="DecimalProperty"/>
        <prop ref="exclude type" value="BigIntegerKeyProperty"/>
        <prop ref="exclude type" value="IntegerKeyProperty"/>
        <prop ref="exclude type" value="SmallIntegerKeyProperty"/>
        <prop ref="exclude type" value="TinyIntegerKeyProperty"/>
      </item>
      <item name="Is Greater Than Or Equal To" value="GE">
        <doc>
          <summary>Checks if the target value is greater than or equal to the specified values.</summary>
        </doc>
        <prop ref="sort order" value="16"/>
        <prop ref="addl props" value="1"/>
        <prop ref="type" value="BigIntegerProperty"/>
        <prop ref="type" value="IntegerProperty"/>
        <prop ref="type" value="SmallIntegerProperty"/>
        <prop ref="type" value="TinyIntegerProperty"/>
        <prop ref="type" value="DecimalProperty"/>
        <prop ref="exclude type" value="BigIntegerKeyProperty"/>
        <prop ref="exclude type" value="IntegerKeyProperty"/>
        <prop ref="exclude type" value="SmallIntegerKeyProperty"/>
        <prop ref="exclude type" value="TinyIntegerKeyProperty"/>
      </item>
      <item name="Today" value="[bod,eod)">
        <doc>
          <summary>Checks if the target date/time is today.</summary>
        </doc>
        <prop ref="sort order" value="03"/>
        <prop ref="type" value="DateTimeProperty"/>
      </item>
      <item name="This Week" value="[bow,eow)">
        <doc>
          <summary>Checks if the target date/time is this week.</summary>
        </doc>
        <prop ref="sort order" value="04"/>
        <prop ref="type" value="DateTimeProperty"/>
      </item>
      <item name="This Month" value="[boM,eoM)">
        <doc>
          <summary>Checks if the target date/time is this month.</summary>
        </doc>
        <prop ref="sort order" value="05"/>
        <prop ref="type" value="DateTimeProperty"/>
      </item>
      <item name="This Year" value="[boy,eoy)">
        <doc>
          <summary>Checks if the target date/time is this year.</summary>
        </doc>
        <prop ref="sort order" value="06"/>
        <prop ref="type" value="DateTimeProperty"/>
      </item>
      <item name="Last 30 Days" value="[bod-30d,ct]">
        <doc>
          <summary>Checks if the target date/time is within the last 30 days from today.</summary>
        </doc>
        <prop ref="sort order" value="07"/>
        <prop ref="type" value="DateTimeProperty"/>
      </item>
      <item name="Is Earlier Than" value="Earlier">
        <doc>
          <summary>Checks if the target date/time is earlier than the specified date/time.</summary>
        </doc>
        <prop ref="sort order" value="12"/>
        <prop ref="addl props" value="1"/>
        <prop ref="type" value="DateTimeProperty"/>
      </item>
      <item name="Is Later Than" value="Later">
        <doc>
          <summary>Checks if the target date/time is later than the specified date/time.</summary>
        </doc>
        <prop ref="sort order" value="14"/>
        <prop ref="addl props" value="1"/>
        <prop ref="type" value="DateTimeProperty"/>
      </item>
      <item name="Contains" value="CN">
        <doc>
          <summary>Checks if the target value contains the specified string.</summary>
        </doc>
        <prop ref="sort order" value="12"/>
        <prop ref="addl props" value="1"/>
        <prop ref="type" value="TextProperty"/>
        <prop ref="exclude type" value="EnumProperty"/>
      </item>
      <item name="Does Not Contain" value="NCN">
        <doc>
          <summary>Checks if the target value does not contain the specified string.</summary>
        </doc>
        <prop ref="sort order" value="13"/>
        <prop ref="addl props" value="1"/>
        <prop ref="type" value="TextProperty"/>
        <prop ref="exclude type" value="EnumProperty"/>
      </item>
      <item name="Starts With" value="SW">
        <doc>
          <summary>Checks if the target value starts with the specified string.</summary>
        </doc>
        <prop ref="sort order" value="14"/>
        <prop ref="addl props" value="1"/>
        <prop ref="type" value="TextProperty"/>
        <prop ref="exclude type" value="EnumProperty"/>
      </item>
      <item name="Does Not Start With" value="NSW">
        <doc>
          <summary>Checks if the target value does not starts with the specified string.</summary>
        </doc>
        <prop ref="sort order" value="15"/>
        <prop ref="addl props" value="1"/>
        <prop ref="type" value="TextProperty"/>
        <prop ref="exclude type" value="EnumProperty"/>
      </item>
      <item name="Is Between" value="BW">
        <doc>
          <summary>Checks if the target value is between the specified values.</summary>
        </doc>
        <prop ref="sort order" value="20"/>
        <prop ref="addl props" value="2"/>
        <prop ref="type" value="BigIntegerProperty"/>
        <prop ref="type" value="IntegerProperty"/>
        <prop ref="type" value="SmallIntegerProperty"/>
        <prop ref="type" value="TinyIntegerProperty"/>
        <prop ref="type" value="DecimalProperty"/>
        <prop ref="type" value="DateTimeProperty"/>
        <prop ref="exclude type" value="BigIntegerKeyProperty"/>
        <prop ref="exclude type" value="IntegerKeyProperty"/>
        <prop ref="exclude type" value="SmallIntegerKeyProperty"/>
        <prop ref="exclude type" value="TinyIntegerKeyProperty"/>
      </item>
      <item name="Is Not Between" value="NBW">
        <doc>
          <summary>Checks if the target value is not between the specified values.</summary>
        </doc>
        <prop ref="sort order" value="21"/>
        <prop ref="addl props" value="2"/>
        <prop ref="type" value="BigIntegerProperty"/>
        <prop ref="type" value="IntegerProperty"/>
        <prop ref="type" value="SmallIntegerProperty"/>
        <prop ref="type" value="TinyIntegerProperty"/>
        <prop ref="type" value="DecimalProperty"/>
        <prop ref="type" value="DateTimeProperty"/>
        <prop ref="exclude type" value="BigIntegerKeyProperty"/>
        <prop ref="exclude type" value="IntegerKeyProperty"/>
        <prop ref="exclude type" value="SmallIntegerKeyProperty"/>
        <prop ref="exclude type" value="TinyIntegerKeyProperty"/>
      </item>
      <doc>
        <summary>A list of operators to be used with filter criteria.</summary>
The possible operators for each criteria will be a subset of this enumeration based on such parameters as
the type of the criteria, whether or not it accepts multiple values, whether it supports specifying ranges
and whether the underlying field is required, i.e. allows blank values.
      </doc>
    </enum>
  </enums>
</module>