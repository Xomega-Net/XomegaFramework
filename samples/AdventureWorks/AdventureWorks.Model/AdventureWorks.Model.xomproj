<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="2.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectGuid>
    </ProjectGuid>
    <Configuration Condition=" '$(Configuration)' == '' ">Model</Configuration>
    <Database>sqlsrv</Database>
    <DbVersion>11.0</DbVersion>
    <DbConnection>Provider=SQLNCLI.1;Integrated Security=SSPI;Persist Security Info=False;Initial Catalog=AdventureWorks2012;Data Source=ZETA\SQLSVR2012</DbConnection>
    <DbExcludeTables>
    </DbExcludeTables>
    <DbCase>camel</DbCase>
    <DbTimeout>
    </DbTimeout>
    <Name>AdventureWorks.Model</Name>
    <TargetFrameworkVersion>4.5.2</TargetFrameworkVersion>
    <RootNamespace>AdventureWorks</RootNamespace>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
  </PropertyGroup>
  <ItemGroup>
    <XomGenerator Include="$(XomegaHome14)Xsl\db_import.xsl">
      <Name>Import from Database</Name>
      <Folder>Model Enhancement</Folder>
      <IncludeInBuild>false</IncludeInBuild>
      <OutputPath-param>Import/{Module/}{File}.xom</OutputPath-param>
      <OutputPath-desc>Path inside the model project to output imported database objects.
The path may contain {Module/} and {File} placeholders to output files by database schema and table respectively.</OutputPath-desc>
      <OutputPath-category>Output</OutputPath-category>
      <AddOutputToProject>true</AddOutputToProject>
      <Database>$(Database)</Database>
      <DbVersion>$(DbVersion)</DbVersion>
      <DbCase>$(DbCase)</DbCase>
      <DbConnectionNeededFor>DbSchema</DbConnectionNeededFor>
      <DbConnection>$(DbConnection)</DbConnection>
      <DbTimeout>$(DbTimeout)</DbTimeout>
      <DbExcludeTables>$(DbExcludeTables)</DbExcludeTables>
      <KeepTableNames-param>True</KeepTableNames-param>
      <KeepTableNames-type>System.Boolean</KeepTableNames-type>
      <KeepTableNames-desc>Specify whether to preserve table names in generated objects.</KeepTableNames-desc>
      <KeepColumnNames-param>True</KeepColumnNames-param>
      <KeepColumnNames-type>System.Boolean</KeepColumnNames-type>
      <KeepColumnNames-desc>Specify whether to preserve column names in generated objects.</KeepColumnNames-desc>
      <KeepConstraintNames-param>False</KeepConstraintNames-param>
      <KeepConstraintNames-type>System.Boolean</KeepConstraintNames-type>
      <KeepConstraintNames-desc>Specify whether to preserve constraint names in generated objects.</KeepConstraintNames-desc>
    </XomGenerator>
    <XomGenerator Include="$(XomegaHome14)Xsl\db_schema.xsl">
      <Name>Database Schema</Name>
      <Folder>Data Layer</Folder>
      <OutputPath-param>db_schema.sql</OutputPath-param>
      <OutputPath-desc>Path where to output generated database script.</OutputPath-desc>
      <OutputPath-category>Output</OutputPath-category>
      <Database>$(Database)</Database>
      <DbVersion>$(DbVersion)</DbVersion>
      <DbCase>$(DbCase)</DbCase>
      <IncludeInBuild>false</IncludeInBuild>
    </XomGenerator>
    <XomGenerator Include="$(XomegaHome14)Xsl\db_diff.xsl">
      <Name>Database Change Script</Name>
      <Folder>Data Layer</Folder>
      <IncludeInBuild>false</IncludeInBuild>
      <OutputPath-param>db_update.sql</OutputPath-param>
      <OutputPath-desc>Path where to output generated database script.</OutputPath-desc>
      <OutputPath-category>Output</OutputPath-category>
      <Database>$(Database)</Database>
      <DbVersion>$(DbVersion)</DbVersion>
      <DbCase>$(DbCase)</DbCase>
      <DbConnectionNeededFor>DbSchema</DbConnectionNeededFor>
      <DbConnection>$(DbConnection)</DbConnection>
      <DbTimeout>$(DbTimeout)</DbTimeout>
      <DbExcludeTables>$(DbExcludeTables)</DbExcludeTables>
    </XomGenerator>
    <XomGenerator Include="$(XomegaHome14)Xsl\doc_xomega.xsl">
      <Name>Domain Model Design</Name>
      <Folder>Documentation</Folder>
      <OutputPath-param>../Docs/DomainModelDesign.docx</OutputPath-param>
      <OutputPath-desc>Path where to output generated document.</OutputPath-desc>
      <OutputPath-category>Output</OutputPath-category>
      <IncludeInBuild>false</IncludeInBuild>
      <DocumentTemplate-param>$(XomegaHome14)Templates\DomainModel.docx</DocumentTemplate-param>
      <DocumentTemplate-category>Generator</DocumentTemplate-category>
      <DocumentTemplate-desc>Path to the MS Word document that will be used as a template for the generated document.</DocumentTemplate-desc>
      <Title-param>AdventureWorks Domain Model</Title-param>
      <Title-desc>Title to use for the generated document.</Title-desc>
      <Subject-param>Technical design for the AdventureWorks domain model</Subject-param>
      <Subject-desc>Subject (subtitle) to use for the generated document.</Subject-desc>
      <Creator-param>[User]</Creator-param>
      <Creator-desc>Creator (author) of the generated document.</Creator-desc>
      <Company-param>[Company]</Company-param>
      <Company-desc>Company to use for the generated document.</Company-desc>
    </XomGenerator>
    <XomGenerator Include="$(XomegaHome14)Xsl\doc_xomega.xsl">
      <Name>Service Model Design</Name>
      <Folder>Documentation</Folder>
      <OutputPath-param>../Docs/ServiceModelDesign.docx</OutputPath-param>
      <OutputPath-desc>Path where to output generated document.</OutputPath-desc>
      <OutputPath-category>Output</OutputPath-category>
      <IncludeInBuild>false</IncludeInBuild>
      <DocumentTemplate-param>$(XomegaHome14)Templates\ServiceModel.docx</DocumentTemplate-param>
      <DocumentTemplate-category>Generator</DocumentTemplate-category>
      <DocumentTemplate-desc>Path to the MS Word document that will be used as a template for the generated document.</DocumentTemplate-desc>
      <Title-param>AdventureWorks Service Model</Title-param>
      <Title-desc>Title to use for the generated document.</Title-desc>
      <Subject-param>Technical design for the AdventureWorks service model</Subject-param>
      <Subject-desc>Subject (subtitle) to use for the generated document.</Subject-desc>
      <Creator-param>[User]</Creator-param>
      <Creator-desc>Creator (author) of the generated document.</Creator-desc>
      <Company-param>[Company]</Company-param>
      <Company-desc>Company to use for the generated document.</Company-desc>
    </XomGenerator>
    <XomGenerator Include="$(XomegaHome14)Xsl\doc_xomega.xsl">
      <Name>Static Data Design</Name>
      <Folder>Documentation</Folder>
      <OutputPath-param>../Docs/StaticDataDesign.docx</OutputPath-param>
      <OutputPath-desc>Path where to output generated document.</OutputPath-desc>
      <OutputPath-category>Output</OutputPath-category>
      <IncludeInBuild>false</IncludeInBuild>
      <DocumentTemplate-param>$(XomegaHome14)Templates\StaticData.docx</DocumentTemplate-param>
      <DocumentTemplate-category>Generator</DocumentTemplate-category>
      <DocumentTemplate-desc>Path to the MS Word document that will be used as a template for the generated document.</DocumentTemplate-desc>
      <Title-param>AdventureWorks Static Data Design</Title-param>
      <Title-desc>Title to use for the generated document.</Title-desc>
      <Subject-param>Technical design for the AdventureWorks static data</Subject-param>
      <Subject-desc>Subject (subtitle) to use for the generated document.</Subject-desc>
      <Creator-param>[User]</Creator-param>
      <Creator-desc>Creator (author) of the generated document.</Creator-desc>
      <Company-param>[Company]</Company-param>
      <Company-desc>Company to use for the generated document.</Company-desc>
    </XomGenerator>
    <XomGenerator Include="$(XomegaHome14)Xsl\doc_sqlxml.xsl">
      <Name>SQLXML Report</Name>
      <Folder>Documentation\Custom</Folder>
      <OutputPath-param>../Docs/SqlXmlReport.docx</OutputPath-param>
      <OutputPath-desc>Path where to output generated document.</OutputPath-desc>
      <OutputPath-category>Output</OutputPath-category>
      <IncludeInBuild>false</IncludeInBuild>
      <DbConnection>$(DbConnection)</DbConnection>
      <Database>$(Database)</Database>
      <DbVersion>$(DbVersion)</DbVersion>
      <DbCase>$(DbCase)</DbCase>
      <DbExcludeTables>$(DbExcludeTables)</DbExcludeTables>
      <DbTimeout>$(DbTimeout)</DbTimeout>
      <SqlQuery-param>
      </SqlQuery-param>
      <SqlQuery-desc>SQL query that returns rooted typed XML using FOR XML, TYPE and ROOT directives.</SqlQuery-desc>
      <SqlQuery-category>Database</SqlQuery-category>
      <SqlQuery-editor>System.ComponentModel.Design.MultilineStringEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</SqlQuery-editor>
      <DocumentTemplate-param>
      </DocumentTemplate-param>
      <DocumentTemplate-category>Generator</DocumentTemplate-category>
      <DocumentTemplate-desc>Path to the MS Word document that will be used as a template for the generated document.</DocumentTemplate-desc>
      <Title-param>SQLXML Report</Title-param>
      <Title-desc>Title to use for the generated document.</Title-desc>
      <Subject-param>Custom report generated from SQL XML</Subject-param>
      <Subject-desc>Subject (subtitle) to use for the generated document.</Subject-desc>
      <Creator-param>[User]</Creator-param>
      <Creator-desc>Creator (author) of the generated document.</Creator-desc>
      <Company-param>[Company]</Company-param>
      <Company-desc>Company to use for the generated document.</Company-desc>
    </XomGenerator>
    <XomGenerator Include="$(XomegaHome14)Xsl\edm.xsl">
      <Name>Entity Data Model</Name>
      <Folder>Data Layer</Folder>
      <OutputPath-param>../AdventureWorks.Services.Entities/Entities/EntityModel.edmx</OutputPath-param>
      <OutputPath-desc>Path where to output generated Entity Data Model file.</OutputPath-desc>
      <OutputPath-category>Output</OutputPath-category>
      <AddToProject-param>../AdventureWorks.Services.Entities/AdventureWorks.Services.Entities.csproj</AddToProject-param>
      <AddToProject-desc>A project file to add the generated files to.</AddToProject-desc>
      <AddToProject-category>Output</AddToProject-category>
      <ConfigFile-param>../AdventureWorks.Client.Web/Web.config</ConfigFile-param>
      <ConfigFile-desc>Configuration file to add entity connection string to based on the project's database connection.</ConfigFile-desc>
      <ConfigFile-category>Output</ConfigFile-category>
      <Database>$(Database)</Database>
      <DbVersion>$(DbVersion)</DbVersion>
      <DbCase>$(DbCase)</DbCase>
      <DbConnection>$(DbConnection)</DbConnection>
      <IncludeInBuild>true</IncludeInBuild>
      <TargetFrameworkVersion>$(TargetFrameworkVersion)</TargetFrameworkVersion>
    </XomGenerator>
    <XomGenerator Include="$(XomegaHome14)Xsl\model_ops.xsl">
      <Name>Lookup View</Name>
      <Folder>Model Enhancement</Folder>
      <IncludeInBuild>false</IncludeInBuild>
      <IndividualFiles>true</IndividualFiles>
      <GeneratorGroup>model</GeneratorGroup>
      <GenerateCRUD-param>False</GenerateCRUD-param>
      <GenerateCRUD-type>System.Boolean</GenerateCRUD-type>
      <GenerateCRUD-desc>Whether to generate Create, Read, Update and Delete operations.</GenerateCRUD-desc>
      <GenerateCRUD-category>Operations</GenerateCRUD-category>
      <GenerateReadList-param>True</GenerateReadList-param>
      <GenerateReadList-type>System.Boolean</GenerateReadList-type>
      <GenerateReadList-desc>Whether to generate Read List operation.</GenerateReadList-desc>
      <GenerateReadList-category>Operations</GenerateReadList-category>
      <GenerateReadListCriteria-param>True</GenerateReadListCriteria-param>
      <GenerateReadListCriteria-type>System.Boolean</GenerateReadListCriteria-type>
      <GenerateReadListCriteria-desc>Whether to generate criteria for Read List operation.</GenerateReadListCriteria-desc>
      <GenerateReadListCriteria-category>Operations</GenerateReadListCriteria-category>
      <GenerateReadListOperators-param>True</GenerateReadListOperators-param>
      <GenerateReadListOperators-type>System.Boolean</GenerateReadListOperators-type>
      <GenerateReadListOperators-desc>Whether to generate operators for search criteria.</GenerateReadListOperators-desc>
      <GenerateReadListOperators-category>Operations</GenerateReadListOperators-category>
      <GenerateSubobjectCRUD-param>True</GenerateSubobjectCRUD-param>
      <GenerateSubobjectCRUD-type>System.Boolean</GenerateSubobjectCRUD-type>
      <GenerateSubobjectCRUD-desc>Whether to generate Create, Read, Update and Delete operations on sub-objects.</GenerateSubobjectCRUD-desc>
      <GenerateSubobjectCRUD-category>Operations</GenerateSubobjectCRUD-category>
      <GenerateSubobjectReadList-param>True</GenerateSubobjectReadList-param>
      <GenerateSubobjectReadList-type>System.Boolean</GenerateSubobjectReadList-type>
      <GenerateSubobjectReadList-desc>Whether to generate Read List operation on sub-objects.</GenerateSubobjectReadList-desc>
      <GenerateSubobjectReadList-category>Operations</GenerateSubobjectReadList-category>
      <GenerateRestMethods-param>True</GenerateRestMethods-param>
      <GenerateRestMethods-type>System.Boolean</GenerateRestMethods-type>
      <GenerateRestMethods-desc>Whether to generate REST API methods on operations.</GenerateRestMethods-desc>
      <GenerateRestMethods-category>Operations</GenerateRestMethods-category>
      <UseYesNoSubstitution-param>True</UseYesNoSubstitution-param>
      <UseYesNoSubstitution-type>System.Boolean</UseYesNoSubstitution-type>
      <UseYesNoSubstitution-desc>Whether to substitute boolean type with yesno for non-required parameters of CRUD operations.</UseYesNoSubstitution-desc>
      <UseYesNoSubstitution-category>Operations</UseYesNoSubstitution-category>
      <GenerateDataObjects-param>True</GenerateDataObjects-param>
      <GenerateDataObjects-type>System.Boolean</GenerateDataObjects-type>
      <GenerateDataObjects-desc>Whether to generate Xomega.Framework Data Object definitions for operations.</GenerateDataObjects-desc>
      <GenerateDataObjects-category>Data Objects</GenerateDataObjects-category>
      <GenerateLinks-param>True</GenerateLinks-param>
      <GenerateLinks-type>System.Boolean</GenerateLinks-type>
      <GenerateLinks-desc>Whether to generate links to corresponding details views on list objects.</GenerateLinks-desc>
      <GenerateLinks-category>Data Objects</GenerateLinks-category>
      <MakeSerialKeysHidden-param>True</MakeSerialKeysHidden-param>
      <MakeSerialKeysHidden-type>System.Boolean</MakeSerialKeysHidden-type>
      <MakeSerialKeysHidden-desc>Whether to configure serial key fields as hidden on views.</MakeSerialKeysHidden-desc>
      <MakeSerialKeysHidden-category>Data Objects</MakeSerialKeysHidden-category>
      <GenerateSearchView-param>True</GenerateSearchView-param>
      <GenerateSearchView-type>System.Boolean</GenerateSearchView-type>
      <GenerateSearchView-desc>Whether to generate a search view for list objects.</GenerateSearchView-desc>
      <GenerateSearchView-category>Views</GenerateSearchView-category>
      <GenerateDetailsView-param>True</GenerateDetailsView-param>
      <GenerateDetailsView-type>System.Boolean</GenerateDetailsView-type>
      <GenerateDetailsView-desc>Whether to generate a details view for CRUD objects.</GenerateDetailsView-desc>
      <GenerateDetailsView-category>Views</GenerateDetailsView-category>
      <SearchViewLayout-param>
      </SearchViewLayout-param>
      <SearchViewLayout-desc>Named layout from the global config to use for the search view.</SearchViewLayout-desc>
      <SearchViewLayout-category>Views</SearchViewLayout-category>
      <DetailsViewLayout-param>
      </DetailsViewLayout-param>
      <DetailsViewLayout-desc>Named layout from the global config to use for the details view.</DetailsViewLayout-desc>
      <DetailsViewLayout-category>Views</DetailsViewLayout-category>
      <ViewNamePostfix-param>View</ViewNamePostfix-param>
      <ViewNamePostfix-desc>Postfix to use for view names.</ViewNamePostfix-desc>
      <ViewNamePostfix-category>Views</ViewNamePostfix-category>
      <AddReadListEnumeration-param>False</AddReadListEnumeration-param>
      <AddReadListEnumeration-type>System.Boolean</AddReadListEnumeration-type>
      <AddReadListEnumeration-desc>Whether to add enumeration definition to the Read List operation.</AddReadListEnumeration-desc>
      <AddReadListEnumeration-category>Enumeration</AddReadListEnumeration-category>
      <MakeKeyTypeEnumerated-param>False</MakeKeyTypeEnumerated-param>
      <MakeKeyTypeEnumerated-type>System.Boolean</MakeKeyTypeEnumerated-type>
      <MakeKeyTypeEnumerated-desc>Whether to update the key type to reference generated enumeration.</MakeKeyTypeEnumerated-desc>
      <MakeKeyTypeEnumerated-category>Enumeration</MakeKeyTypeEnumerated-category>
      <AddSuggestType-param>False</AddSuggestType-param>
      <AddSuggestType-type>System.Boolean</AddSuggestType-type>
      <AddSuggestType-desc>Whether to add a separate type linked to the generated enumeration to suggest values, which also accepts other values.</AddSuggestType-desc>
      <AddSuggestType-category>Enumeration</AddSuggestType-category>
    </XomGenerator>
    <XomGenerator Include="$(XomegaHome14)Xsl\wcf_svcimpl.xsl">
      <Name>Service Implementations</Name>
      <Folder>Service Layer</Folder>
      <OutputPath-param>../AdventureWorks.Services.Entities/Services/{Module/}{File}.cs</OutputPath-param>
      <OutputPath-desc>Path where to output generated files for service implementations.
The path may contain {Module/} and {File} placeholders to output files by module and service respectively.</OutputPath-desc>
      <OutputPath-category>Output</OutputPath-category>
      <AddToProject-param>../AdventureWorks.Services.Entities/AdventureWorks.Services.Entities.csproj</AddToProject-param>
      <AddToProject-desc>A project file to add the generated files to.</AddToProject-desc>
      <AddToProject-category>Output</AddToProject-category>
      <RegistryFile-param>../AdventureWorks.Services.Entities/Services/Services.cs</RegistryFile-param>
      <RegistryFile-desc>A path to the file for service implementations resgistration.</RegistryFile-desc>
      <RegistryFile-category>Output</RegistryFile-category>
      <CustomPath-param>
      </CustomPath-param>
      <CustomPath-desc>Path where to output override classes for the generated Service Implementations. 
If not set then the OutputPath will be used. The path must contain {File} placeholder to output files by service.</CustomPath-desc>
      <CustomPath-category>Output</CustomPath-category>
      <NestCustomFile-param>True</NestCustomFile-param>
      <NestCustomFile-desc>Whether or not to nest custom file under the auto-generated base file in the project. Applies only if both files are output to the same directory.</NestCustomFile-desc>
      <NestCustomFile-type>System.Boolean</NestCustomFile-type>
      <NestCustomFile-category>Output</NestCustomFile-category>
      <UseObjectContext-param>False</UseObjectContext-param>
      <UseObjectContext-type>System.Boolean</UseObjectContext-type>
      <UseObjectContext-desc>Whether to use Entity Framework's ObjectContext or DbContext.</UseObjectContext-desc>
      <Database>$(Database)</Database>
      <DbVersion>$(DbVersion)</DbVersion>
      <IncludeInBuild>true</IncludeInBuild>
      <IndividualFiles>true</IndividualFiles>
      <GeneratorGroup>services</GeneratorGroup>
    </XomGenerator>
    <XomGenerator Include="$(XomegaHome14)Xsl\model_ops.xsl">
      <Name>Full CRUD with Views</Name>
      <Folder>Model Enhancement</Folder>
      <IncludeInBuild>false</IncludeInBuild>
      <IndividualFiles>true</IndividualFiles>
      <GeneratorGroup>model</GeneratorGroup>
      <GenerateCRUD-param>True</GenerateCRUD-param>
      <GenerateCRUD-type>System.Boolean</GenerateCRUD-type>
      <GenerateCRUD-desc>Whether to generate Create, Read, Update and Delete operations.</GenerateCRUD-desc>
      <GenerateCRUD-category>Operations</GenerateCRUD-category>
      <GenerateReadList-param>True</GenerateReadList-param>
      <GenerateReadList-type>System.Boolean</GenerateReadList-type>
      <GenerateReadList-desc>Whether to generate Read List operation.</GenerateReadList-desc>
      <GenerateReadList-category>Operations</GenerateReadList-category>
      <GenerateReadListCriteria-param>True</GenerateReadListCriteria-param>
      <GenerateReadListCriteria-type>System.Boolean</GenerateReadListCriteria-type>
      <GenerateReadListCriteria-desc>Whether to generate criteria for Read List operation.</GenerateReadListCriteria-desc>
      <GenerateReadListCriteria-category>Operations</GenerateReadListCriteria-category>
      <GenerateReadListOperators-param>True</GenerateReadListOperators-param>
      <GenerateReadListOperators-type>System.Boolean</GenerateReadListOperators-type>
      <GenerateReadListOperators-desc>Whether to generate operators for search criteria.</GenerateReadListOperators-desc>
      <GenerateReadListOperators-category>Operations</GenerateReadListOperators-category>
      <GenerateSubobjectCRUD-param>True</GenerateSubobjectCRUD-param>
      <GenerateSubobjectCRUD-type>System.Boolean</GenerateSubobjectCRUD-type>
      <GenerateSubobjectCRUD-desc>Whether to generate Create, Read, Update and Delete operations on sub-objects.</GenerateSubobjectCRUD-desc>
      <GenerateSubobjectCRUD-category>Operations</GenerateSubobjectCRUD-category>
      <GenerateSubobjectReadList-param>True</GenerateSubobjectReadList-param>
      <GenerateSubobjectReadList-type>System.Boolean</GenerateSubobjectReadList-type>
      <GenerateSubobjectReadList-desc>Whether to generate Read List operation on sub-objects.</GenerateSubobjectReadList-desc>
      <GenerateSubobjectReadList-category>Operations</GenerateSubobjectReadList-category>
      <GenerateRestMethods-param>True</GenerateRestMethods-param>
      <GenerateRestMethods-type>System.Boolean</GenerateRestMethods-type>
      <GenerateRestMethods-desc>Whether to generate REST API methods on operations.</GenerateRestMethods-desc>
      <GenerateRestMethods-category>Operations</GenerateRestMethods-category>
      <UseYesNoSubstitution-param>True</UseYesNoSubstitution-param>
      <UseYesNoSubstitution-type>System.Boolean</UseYesNoSubstitution-type>
      <UseYesNoSubstitution-desc>Whether to substitute boolean type with yesno for non-required parameters of CRUD operations.</UseYesNoSubstitution-desc>
      <UseYesNoSubstitution-category>Operations</UseYesNoSubstitution-category>
      <GenerateDataObjects-param>True</GenerateDataObjects-param>
      <GenerateDataObjects-type>System.Boolean</GenerateDataObjects-type>
      <GenerateDataObjects-desc>Whether to generate Xomega.Framework Data Object definitions for operations.</GenerateDataObjects-desc>
      <GenerateDataObjects-category>Data Objects</GenerateDataObjects-category>
      <GenerateLinks-param>True</GenerateLinks-param>
      <GenerateLinks-type>System.Boolean</GenerateLinks-type>
      <GenerateLinks-desc>Whether to generate links to corresponding details views on list objects.</GenerateLinks-desc>
      <GenerateLinks-category>Data Objects</GenerateLinks-category>
      <MakeSerialKeysHidden-param>True</MakeSerialKeysHidden-param>
      <MakeSerialKeysHidden-type>System.Boolean</MakeSerialKeysHidden-type>
      <MakeSerialKeysHidden-desc>Whether to configure serial key fields as hidden on views.</MakeSerialKeysHidden-desc>
      <MakeSerialKeysHidden-category>Data Objects</MakeSerialKeysHidden-category>
      <GenerateSearchView-param>True</GenerateSearchView-param>
      <GenerateSearchView-type>System.Boolean</GenerateSearchView-type>
      <GenerateSearchView-desc>Whether to generate a search view for list objects.</GenerateSearchView-desc>
      <GenerateSearchView-category>Views</GenerateSearchView-category>
      <GenerateDetailsView-param>True</GenerateDetailsView-param>
      <GenerateDetailsView-type>System.Boolean</GenerateDetailsView-type>
      <GenerateDetailsView-desc>Whether to generate a details view for CRUD objects.</GenerateDetailsView-desc>
      <GenerateDetailsView-category>Views</GenerateDetailsView-category>
      <SearchViewLayout-param>
      </SearchViewLayout-param>
      <SearchViewLayout-desc>Named layout from the global config to use for the search view.</SearchViewLayout-desc>
      <SearchViewLayout-category>Views</SearchViewLayout-category>
      <DetailsViewLayout-param>
      </DetailsViewLayout-param>
      <DetailsViewLayout-desc>Named layout from the global config to use for the details view.</DetailsViewLayout-desc>
      <DetailsViewLayout-category>Views</DetailsViewLayout-category>
      <ViewNamePostfix-param>View</ViewNamePostfix-param>
      <ViewNamePostfix-desc>Postfix to use for view names.</ViewNamePostfix-desc>
      <ViewNamePostfix-category>Views</ViewNamePostfix-category>
      <AddReadListEnumeration-param>False</AddReadListEnumeration-param>
      <AddReadListEnumeration-type>System.Boolean</AddReadListEnumeration-type>
      <AddReadListEnumeration-desc>Whether to add enumeration definition to the Read List operation.</AddReadListEnumeration-desc>
      <AddReadListEnumeration-category>Enumeration</AddReadListEnumeration-category>
      <MakeKeyTypeEnumerated-param>False</MakeKeyTypeEnumerated-param>
      <MakeKeyTypeEnumerated-type>System.Boolean</MakeKeyTypeEnumerated-type>
      <MakeKeyTypeEnumerated-desc>Whether to update the key type to reference generated enumeration.</MakeKeyTypeEnumerated-desc>
      <MakeKeyTypeEnumerated-category>Enumeration</MakeKeyTypeEnumerated-category>
      <AddSuggestType-param>False</AddSuggestType-param>
      <AddSuggestType-type>System.Boolean</AddSuggestType-type>
      <AddSuggestType-desc>Whether to add a separate type linked to the generated enumeration to suggest values, which also accepts other values.</AddSuggestType-desc>
      <AddSuggestType-category>Enumeration</AddSuggestType-category>
    </XomGenerator>
    <XomGenerator Include="$(XomegaHome14)Xsl\model_ops.xsl">
      <Name>Enumeration Read List</Name>
      <Folder>Model Enhancement</Folder>
      <IncludeInBuild>false</IncludeInBuild>
      <IndividualFiles>true</IndividualFiles>
      <GeneratorGroup>model</GeneratorGroup>
      <GenerateCRUD-param>False</GenerateCRUD-param>
      <GenerateCRUD-type>System.Boolean</GenerateCRUD-type>
      <GenerateCRUD-desc>Whether to generate Create, Read, Update and Delete operations.</GenerateCRUD-desc>
      <GenerateCRUD-category>Operations</GenerateCRUD-category>
      <GenerateReadList-param>True</GenerateReadList-param>
      <GenerateReadList-type>System.Boolean</GenerateReadList-type>
      <GenerateReadList-desc>Whether to generate Read List operation.</GenerateReadList-desc>
      <GenerateReadList-category>Operations</GenerateReadList-category>
      <GenerateReadListCriteria-param>False</GenerateReadListCriteria-param>
      <GenerateReadListCriteria-type>System.Boolean</GenerateReadListCriteria-type>
      <GenerateReadListCriteria-desc>Whether to generate criteria for Read List operation.</GenerateReadListCriteria-desc>
      <GenerateReadListCriteria-category>Operations</GenerateReadListCriteria-category>
      <GenerateReadListOperators-param>False</GenerateReadListOperators-param>
      <GenerateReadListOperators-type>System.Boolean</GenerateReadListOperators-type>
      <GenerateReadListOperators-desc>Whether to generate operators for search criteria.</GenerateReadListOperators-desc>
      <GenerateReadListOperators-category>Operations</GenerateReadListOperators-category>
      <GenerateSubobjectCRUD-param>False</GenerateSubobjectCRUD-param>
      <GenerateSubobjectCRUD-type>System.Boolean</GenerateSubobjectCRUD-type>
      <GenerateSubobjectCRUD-desc>Whether to generate Create, Read, Update and Delete operations on sub-objects.</GenerateSubobjectCRUD-desc>
      <GenerateSubobjectCRUD-category>Operations</GenerateSubobjectCRUD-category>
      <GenerateSubobjectReadList-param>False</GenerateSubobjectReadList-param>
      <GenerateSubobjectReadList-type>System.Boolean</GenerateSubobjectReadList-type>
      <GenerateSubobjectReadList-desc>Whether to generate Read List operation on sub-objects.</GenerateSubobjectReadList-desc>
      <GenerateSubobjectReadList-category>Operations</GenerateSubobjectReadList-category>
      <GenerateRestMethods-param>True</GenerateRestMethods-param>
      <GenerateRestMethods-type>System.Boolean</GenerateRestMethods-type>
      <GenerateRestMethods-desc>Whether to generate REST API methods on operations.</GenerateRestMethods-desc>
      <GenerateRestMethods-category>Operations</GenerateRestMethods-category>
      <UseYesNoSubstitution-param>False</UseYesNoSubstitution-param>
      <UseYesNoSubstitution-type>System.Boolean</UseYesNoSubstitution-type>
      <UseYesNoSubstitution-desc>Whether to substitute boolean type with yesno for non-required parameters of CRUD operations.</UseYesNoSubstitution-desc>
      <UseYesNoSubstitution-category>Operations</UseYesNoSubstitution-category>
      <GenerateDataObjects-param>False</GenerateDataObjects-param>
      <GenerateDataObjects-type>System.Boolean</GenerateDataObjects-type>
      <GenerateDataObjects-desc>Whether to generate Xomega.Framework Data Object definitions for operations.</GenerateDataObjects-desc>
      <GenerateDataObjects-category>Data Objects</GenerateDataObjects-category>
      <GenerateLinks-param>False</GenerateLinks-param>
      <GenerateLinks-type>System.Boolean</GenerateLinks-type>
      <GenerateLinks-desc>Whether to generate links to corresponding details views on list objects.</GenerateLinks-desc>
      <GenerateLinks-category>Data Objects</GenerateLinks-category>
      <MakeSerialKeysHidden-param>False</MakeSerialKeysHidden-param>
      <MakeSerialKeysHidden-type>System.Boolean</MakeSerialKeysHidden-type>
      <MakeSerialKeysHidden-desc>Whether to configure serial key fields as hidden on views.</MakeSerialKeysHidden-desc>
      <MakeSerialKeysHidden-category>Data Objects</MakeSerialKeysHidden-category>
      <GenerateSearchView-param>False</GenerateSearchView-param>
      <GenerateSearchView-type>System.Boolean</GenerateSearchView-type>
      <GenerateSearchView-desc>Whether to generate a search view for list objects.</GenerateSearchView-desc>
      <GenerateSearchView-category>Views</GenerateSearchView-category>
      <GenerateDetailsView-param>False</GenerateDetailsView-param>
      <GenerateDetailsView-type>System.Boolean</GenerateDetailsView-type>
      <GenerateDetailsView-desc>Whether to generate a details view for CRUD objects.</GenerateDetailsView-desc>
      <GenerateDetailsView-category>Views</GenerateDetailsView-category>
      <SearchViewLayout-param>
      </SearchViewLayout-param>
      <SearchViewLayout-desc>Named layout from the global config to use for the search view.</SearchViewLayout-desc>
      <SearchViewLayout-category>Views</SearchViewLayout-category>
      <DetailsViewLayout-param>
      </DetailsViewLayout-param>
      <DetailsViewLayout-desc>Named layout from the global config to use for the details view.</DetailsViewLayout-desc>
      <DetailsViewLayout-category>Views</DetailsViewLayout-category>
      <ViewNamePostfix-param>View</ViewNamePostfix-param>
      <ViewNamePostfix-desc>Postfix to use for view names.</ViewNamePostfix-desc>
      <ViewNamePostfix-category>Views</ViewNamePostfix-category>
      <AddReadListEnumeration-param>True</AddReadListEnumeration-param>
      <AddReadListEnumeration-type>System.Boolean</AddReadListEnumeration-type>
      <AddReadListEnumeration-desc>Whether to add enumeration definition to the Read List operation.</AddReadListEnumeration-desc>
      <AddReadListEnumeration-category>Enumeration</AddReadListEnumeration-category>
      <MakeKeyTypeEnumerated-param>True</MakeKeyTypeEnumerated-param>
      <MakeKeyTypeEnumerated-type>System.Boolean</MakeKeyTypeEnumerated-type>
      <MakeKeyTypeEnumerated-desc>Whether to update the key type to reference generated enumeration.</MakeKeyTypeEnumerated-desc>
      <MakeKeyTypeEnumerated-category>Enumeration</MakeKeyTypeEnumerated-category>
      <AddSuggestType-param>False</AddSuggestType-param>
      <AddSuggestType-type>System.Boolean</AddSuggestType-type>
      <AddSuggestType-desc>Whether to add a separate type linked to the generated enumeration to suggest values, which also accepts other values.</AddSuggestType-desc>
      <AddSuggestType-category>Enumeration</AddSuggestType-category>
    </XomGenerator>
    <XomGenerator Include="$(XomegaHome14)Xsl\model_enums_db.xsl">
      <Name>Enumerations from Database</Name>
      <Folder>Model Enhancement</Folder>
      <OutputPath-param>ImportedEnums/_{Module}_enums.xom</OutputPath-param>
      <OutputPath-desc>Path where to output generated files with enumerations.
The path may contain {Module/} and {File} placeholders to output files by database schema and enumeration respectively.</OutputPath-desc>
      <OutputPath-category>Output</OutputPath-category>
      <AddOutputToProject>true</AddOutputToProject>
      <IncludeInBuild>false</IncludeInBuild>
      <Database>$(Database)</Database>
      <DbVersion>$(DbVersion)</DbVersion>
      <DbCase>$(DbCase)</DbCase>
      <DbConnection>$(DbConnection)</DbConnection>
      <DbTimeout>$(DbTimeout)</DbTimeout>
    </XomGenerator>
    <XomGenerator Include="$(XomegaHome14)Xsl\ts_services.xsl">
      <Name>TS Service Contracts</Name>
      <Folder>Presentation Layer\SPA</Folder>
      <AddToProject-param>../AdventureWorks.Client.Spa/AdventureWorks.Client.Spa.csproj</AddToProject-param>
      <AddToProject-desc>A project file to add the generated files to.</AddToProject-desc>
      <AddToProject-category>Output</AddToProject-category>
      <IncludeInBuild>true</IncludeInBuild>
      <IndividualFiles>false</IndividualFiles>
      <GeneratorGroup>presentation</GeneratorGroup>
    </XomGenerator>
    <XomGenerator Include="$(XomegaHome14)Xsl\wcf_services.xsl">
      <Name>Service Contracts</Name>
      <Folder>Service Layer</Folder>
      <OutputPath-param>../AdventureWorks.Services.Common/ServiceContracts/{Module/}{File}.cs</OutputPath-param>
      <OutputPath-desc>Path where to output generated files for service and data contracts.
The path may contain {Module/} and {File} placeholders to output files by module and service respectively.</OutputPath-desc>
      <OutputPath-category>Output</OutputPath-category>
      <AddToProject-param>../AdventureWorks.Services.Common/AdventureWorks.Services.Common.csproj</AddToProject-param>
      <AddToProject-desc>A project file to add the generated files to.</AddToProject-desc>
      <AddToProject-category>Output</AddToProject-category>
      <IncludeInBuild>true</IncludeInBuild>
      <IndividualFiles>true</IndividualFiles>
      <GeneratorGroup>services</GeneratorGroup>
      <Wcf-param>True</Wcf-param>
      <Wcf-desc>Specify whether or not to add WCF attributes to service and data contracts.</Wcf-desc>
      <Wcf-type>System.Boolean</Wcf-type>
      <WcfRest-param>False</WcfRest-param>
      <WcfRest-desc>Specify whether or not to add WCF REST attributes to service operation contracts.</WcfRest-desc>
      <WcfRest-type>System.Boolean</WcfRest-type>
    </XomGenerator>
    <XomGenerator Include="$(XomegaHome14)Xsl\wcf_config.xsl">
      <Name>WCF Server Configuration</Name>
      <Folder>Service Layer</Folder>
      <OutputPath-param>../AdventureWorks.Services.Wcf/serviceModel.services.config</OutputPath-param>
      <OutputPath-desc>Path to the .config file to update WCF service configuration for.</OutputPath-desc>
      <OutputPath-category>Output</OutputPath-category>
      <EndpointBehavior-param>
      </EndpointBehavior-param>
      <EndpointBehavior-desc>Endpoint behavior to set for all service endpoints.</EndpointBehavior-desc>
      <IsClient-param>False</IsClient-param>
      <IsClient-desc>Specify whether it is a client or a server configuration.</IsClient-desc>
      <IsClient-type>System.Boolean</IsClient-type>
      <ServiceBehavior-param>
      </ServiceBehavior-param>
      <ServiceBehavior-desc>Service behavior to set for all services.</ServiceBehavior-desc>
      <IncludeInBuild>true</IncludeInBuild>
    </XomGenerator>
    <XomGenerator Include="$(XomegaHome14)Xsl\wcf_iis_svchost.xsl">
      <Name>WCF Service Host Files</Name>
      <Folder>Service Layer</Folder>
      <OutputPath-param>../AdventureWorks.Services.Wcf/{Module/}{File}.svc</OutputPath-param>
      <AddToProject-param>../AdventureWorks.Services.Wcf/AdventureWorks.Services.Wcf.csproj</AddToProject-param>
      <OutputPath-desc>Path where to output generated IIS service host files. Path must contain {File} placeholder.</OutputPath-desc>
      <OutputPath-category>Output</OutputPath-category>
      <AddToProject-desc>A project file to add the generated files to.</AddToProject-desc>
      <AddToProject-category>Output</AddToProject-category>
      <IncludeInBuild>true</IncludeInBuild>
    </XomGenerator>
    <XomGenerator Include="$(XomegaHome14)Xsl\wcf_config.xsl">
      <Name>WCF Client Configuration</Name>
      <Folder>Presentation Layer\WPF</Folder>
      <OutputPath-param>../AdventureWorks.Client.Wpf/serviceModel.client.config</OutputPath-param>
      <OutputPath-desc>Path to the .config file to update WCF client configuration for.</OutputPath-desc>
      <OutputPath-category>Output</OutputPath-category>
      <IsClient-param>True</IsClient-param>
      <IsClient-desc>Specify whether it is a client or a server configuration.</IsClient-desc>
      <IsClient-type>System.Boolean</IsClient-type>
      <IncludeInBuild>true</IncludeInBuild>
    </XomGenerator>
    <XomGenerator Include="$(XomegaHome14)Xsl\webapi_controllers.xsl">
      <Name>Web API Controllers</Name>
      <Folder>Service Layer</Folder>
      <OutputPath-param>../AdventureWorks.Services.Rest/{Module/}{File}.cs</OutputPath-param>
      <OutputPath-desc>Path where to output generated Web API controllers.
The path may contain {Module/} and {File} placeholders to output files by module and object respectively.</OutputPath-desc>
      <OutputPath-category>Output</OutputPath-category>
      <CustomPath-param>
      </CustomPath-param>
      <CustomPath-desc>Path where to output override classes for the generated controllers. 
If not set then the OutputPath will be used. The path must contain {File} placeholder to output files by controller.</CustomPath-desc>
      <CustomPath-category>Output</CustomPath-category>
      <NestCustomFile-param>True</NestCustomFile-param>
      <NestCustomFile-desc>Whether or not to nest custom file under the auto-generated base file in the project. Applies only if both files are output to the same directory.</NestCustomFile-desc>
      <NestCustomFile-type>System.Boolean</NestCustomFile-type>
      <NestCustomFile-category>Output</NestCustomFile-category>
      <AddToProject-param>../AdventureWorks.Services.Rest/AdventureWorks.Services.Rest.csproj</AddToProject-param>
      <AddToProject-desc>A project file to add the generated files to.</AddToProject-desc>
      <AddToProject-category>Output</AddToProject-category>
      <RegistryFile-param>../AdventureWorks.Services.Rest/Controllers.cs</RegistryFile-param>
      <RegistryFile-desc>A path to the file for controllers resgistration.</RegistryFile-desc>
      <RegistryFile-category>Output</RegistryFile-category>
      <IncludeInBuild>true</IncludeInBuild>
      <IndividualFiles>false</IndividualFiles>
      <GeneratorGroup>services</GeneratorGroup>
    </XomGenerator>
    <XomGenerator Include="$(XomegaHome14)Xsl\data_objects.xsl">
      <Name>Xomega Data Objects</Name>
      <Folder>Presentation Layer\View Models</Folder>
      <OutputPath-param>../AdventureWorks.Client.Common/DataObjects/{Module/}{File}.cs</OutputPath-param>
      <AddToProject-param>../AdventureWorks.Client.Common/AdventureWorks.Client.Common.csproj</AddToProject-param>
      <OutputPath-desc>Path where to output files with generated Xomega Data Objects.
The path may contain {Module/} and {File} placeholders to output files by module and data object respectively.</OutputPath-desc>
      <OutputPath-category>Output</OutputPath-category>
      <CustomPath-param>
      </CustomPath-param>
      <CustomPath-desc>Path where to output override classes for the generated Xomega Data Objects. 
If not set then the OutputPath will be used. The path must contain {File} placeholder to output files by data object.</CustomPath-desc>
      <CustomPath-category>Output</CustomPath-category>
      <NestCustomFile-param>True</NestCustomFile-param>
      <NestCustomFile-desc>Whether or not to nest custom file under the auto-generated base file in the project. Applies only if both files are output to the same directory.</NestCustomFile-desc>
      <NestCustomFile-type>System.Boolean</NestCustomFile-type>
      <NestCustomFile-category>Output</NestCustomFile-category>
      <AddToProject-desc>A project file to add the generated files to.</AddToProject-desc>
      <AddToProject-category>Output</AddToProject-category>
      <RegistryFile-param>../AdventureWorks.Client.Common/DataObjects/DataObjects.cs</RegistryFile-param>
      <RegistryFile-desc>A path to the file for data object resgistration.</RegistryFile-desc>
      <RegistryFile-category>Output</RegistryFile-category>
      <IncludeInBuild>true</IncludeInBuild>
      <IndividualFiles>true</IndividualFiles>
      <GeneratorGroup>presentation</GeneratorGroup>
    </XomGenerator>
    <XomGenerator Include="$(XomegaHome14)Xsl\view_models.xsl">
      <Name>View Models</Name>
      <Folder>Presentation Layer\View Models</Folder>
      <AddToProject-param>../AdventureWorks.Client.Common/AdventureWorks.Client.Common.csproj</AddToProject-param>
      <AddToProject-desc>A project file to add the generated files to.</AddToProject-desc>
      <AddToProject-category>Output</AddToProject-category>
      <OutputPath-param>../AdventureWorks.Client.Common/ViewModels/{Module/}{File}.cs</OutputPath-param>
      <OutputPath-desc>Path where to output files with generated views models.</OutputPath-desc>
      <OutputPath-category>Output</OutputPath-category>
      <CustomPath-param>
      </CustomPath-param>
      <CustomPath-desc>Path where to output override classes for the generated view models. 
If not set then the OutputPath will be used. The path must contain {File} placeholder to output files by view.</CustomPath-desc>
      <CustomPath-category>Output</CustomPath-category>
      <NestCustomFile-param>True</NestCustomFile-param>
      <NestCustomFile-desc>Whether or not to nest custom file under the auto-generated base file in the project. Applies only if both files are output to the same directory.</NestCustomFile-desc>
      <NestCustomFile-type>System.Boolean</NestCustomFile-type>
      <NestCustomFile-category>Output</NestCustomFile-category>
      <RegistryFile-param>../AdventureWorks.Client.Common/ViewModels/ViewModels.cs</RegistryFile-param>
      <RegistryFile-desc>A path to the file for view model resgistration.</RegistryFile-desc>
      <RegistryFile-category>Output</RegistryFile-category>
      <IncludeInBuild>true</IncludeInBuild>
      <IndividualFiles>true</IndividualFiles>
      <GeneratorGroup>presentation</GeneratorGroup>
    </XomGenerator>
    <XomGenerator Include="$(XomegaHome14)Xsl\ts_data_objects.xsl">
      <Name>XomegaJS Data Objects</Name>
      <Folder>Presentation Layer\SPA</Folder>
      <AddToProject-param>../AdventureWorks.Client.Spa/AdventureWorks.Client.Spa.csproj</AddToProject-param>
      <AddToProject-desc>A project file to add the generated files to.</AddToProject-desc>
      <AddToProject-category>Output</AddToProject-category>
      <NestCustomFile-param>True</NestCustomFile-param>
      <NestCustomFile-desc>Whether or not to nest custom file under the auto-generated base file in the project. Applies only if both files are output to the same directory.</NestCustomFile-desc>
      <NestCustomFile-type>System.Boolean</NestCustomFile-type>
      <NestCustomFile-category>Output</NestCustomFile-category>
      <IncludeInBuild>true</IncludeInBuild>
      <IndividualFiles>false</IndividualFiles>
      <GeneratorGroup>presentation</GeneratorGroup>
    </XomGenerator>
    <XomGenerator Include="$(XomegaHome14)Xsl\ts_enum_cache.xsl">
      <Name>TS Lookup Cache Loaders</Name>
      <Folder>Presentation Layer\SPA</Folder>
      <OutputPath-param>../AdventureWorks.Client.Spa/CacheLoaders/{File}.ts</OutputPath-param>
      <OutputPath-desc>Path where to output files with generated lookup cache loaders.
The path may contain {Module/} and {File} placeholders to output files by module and service respectively.</OutputPath-desc>
      <OutputPath-category>Output</OutputPath-category>
      <RegistryFile-param>
      </RegistryFile-param>
      <RegistryFile-desc>A path to the file for cache loaders resgistration.</RegistryFile-desc>
      <RegistryFile-category>Output</RegistryFile-category>
      <Namespace-param>
      </Namespace-param>
      <Namespace-desc>Namespace for the generated classes.</Namespace-desc>
      <AddToProject-param>../AdventureWorks.Client.Spa/AdventureWorks.Client.Spa.csproj</AddToProject-param>
      <AddToProject-desc>A project file to add the generated files to.</AddToProject-desc>
      <AddToProject-category>Output</AddToProject-category>
      <IncludeInBuild>true</IncludeInBuild>
      <IndividualFiles>false</IndividualFiles>
      <GeneratorGroup>services</GeneratorGroup>
    </XomGenerator>
    <XomGenerator Include="$(XomegaHome14)Xsl\ts_enum_const.xsl">
      <Name>TS Enumeration Constants</Name>
      <Folder>Presentation Layer\SPA</Folder>
      <OutputPath-param>../AdventureWorks.Client.Spa/Enumerations/Enumerations.ts</OutputPath-param>
      <OutputPath-desc>Path where to output files with generated Typescript contstants for enumerations.</OutputPath-desc>
      <OutputPath-category>Output</OutputPath-category>
      <AddToProject-param>../AdventureWorks.Client.Spa/AdventureWorks.Client.Spa.csproj</AddToProject-param>
      <AddToProject-desc>A project file to add the generated files to.</AddToProject-desc>
      <AddToProject-category>Output</AddToProject-category>
      <IncludeInBuild>true</IncludeInBuild>
    </XomGenerator>
    <XomGenerator Include="$(XomegaHome14)Xsl\ts_views.xsl">
      <Name>SPA Views</Name>
      <Folder>Presentation Layer\SPA</Folder>
      <AddToProject-param>../AdventureWorks.Client.Spa/AdventureWorks.Client.Spa.csproj</AddToProject-param>
      <AddToProject-desc>A project file to add the generated files to.</AddToProject-desc>
      <AddToProject-category>Output</AddToProject-category>
      <CustomPath-param>
      </CustomPath-param>
      <CustomPath-desc>Path where to output override classes for the generated Views.
If not set then the OutputPath will be used. The path must contain {File} placeholder to output files by view.</CustomPath-desc>
      <CustomPath-category>Output</CustomPath-category>
      <NestCustomFile-param>True</NestCustomFile-param>
      <NestCustomFile-desc>Whether or not to nest custom file under the auto-generated base file in the project. Applies only if both files are output to the same directory.</NestCustomFile-desc>
      <NestCustomFile-type>System.Boolean</NestCustomFile-type>
      <NestCustomFile-category>Output</NestCustomFile-category>
      <OutputPath-param>../AdventureWorks.Client.Spa/Views/{Module/}{File}</OutputPath-param>
      <OutputPath-desc>Path where to output files with generated SPA views. Path must contain {File} placeholder.</OutputPath-desc>
      <OutputPath-category>Output</OutputPath-category>
      <RegistryFile-param>../AdventureWorks.Client.Spa/Views/ViewsConfig.ts</RegistryFile-param>
      <RegistryFile-desc>A path to the file for view paths resgistration.</RegistryFile-desc>
      <RegistryFile-category>Output</RegistryFile-category>
      <MenuFile-param>../AdventureWorks.Client.Spa/Views/MainMenu.ts</MenuFile-param>
      <MenuFile-desc>A path to the file for view routes resgistration.</MenuFile-desc>
      <MenuFile-category>Output</MenuFile-category>
      <View-param>
      </View-param>
      <View-desc>The name of the view from the model to generate a search view for.</View-desc>
      <View-category>Selector</View-category>
      <IncludeInBuild>true</IncludeInBuild>
      <IndividualFiles>false</IndividualFiles>
      <GeneratorGroup>presentation</GeneratorGroup>
    </XomGenerator>
    <XomGenerator Include="$(XomegaHome14)Xsl\wpf_views.xsl">
      <Name>WPF Views</Name>
      <Folder>Presentation Layer\WPF</Folder>
      <AddToProject-param>../AdventureWorks.Client.Wpf/AdventureWorks.Client.Wpf.csproj</AddToProject-param>
      <AddToProject-desc>A project file to add the generated files to.</AddToProject-desc>
      <AddToProject-category>Output</AddToProject-category>
      <CustomPath-param>
      </CustomPath-param>
      <CustomPath-desc>Path where to output override classes for the generated Views. 
If not set then the OutputPath will be used. The path must contain {File} placeholder to output files by view.</CustomPath-desc>
      <CustomPath-category>Output</CustomPath-category>
      <NestCustomFile-param>True</NestCustomFile-param>
      <NestCustomFile-desc>Whether or not to nest custom file under the auto-generated base file in the project. Applies only if both files are output to the same directory.</NestCustomFile-desc>
      <NestCustomFile-type>System.Boolean</NestCustomFile-type>
      <NestCustomFile-category>Output</NestCustomFile-category>
      <OutputPath-param>../AdventureWorks.Client.Wpf/Views/{Module/}{File}</OutputPath-param>
      <OutputPath-desc>Path where to output files with generated WPF search forms. Path must contain {File} placeholder.</OutputPath-desc>
      <OutputPath-category>Output</OutputPath-category>
      <RegistryFile-param>../AdventureWorks.Client.Wpf/Views/Views.cs</RegistryFile-param>
      <RegistryFile-desc>A path to the file for views resgistration.</RegistryFile-desc>
      <RegistryFile-category>Output</RegistryFile-category>
      <MenuFile-param>../AdventureWorks.Client.Wpf/Controls/MainMenu</MenuFile-param>
      <MenuFile-desc>Path where to output generated menu resources without extension.</MenuFile-desc>
      <MenuFile-category>Output</MenuFile-category>
      <Namespace-param>AdventureWorks.Client.Wpf</Namespace-param>
      <Namespace-desc>Namespace for the generated views.</Namespace-desc>
      <View-param>
      </View-param>
      <View-desc>The name of the view from the model to generate a details view for.</View-desc>
      <View-category>Selector</View-category>
      <IncludeInBuild>true</IncludeInBuild>
      <IndividualFiles>false</IndividualFiles>
      <GeneratorGroup>presentation</GeneratorGroup>
    </XomGenerator>
    <XomGenerator Include="$(XomegaHome14)Xsl\asp_views.xsl">
      <Name>ASP.NET Views</Name>
      <Folder>Presentation Layer\ASP.NET</Folder>
      <AddToProject-param>../AdventureWorks.Client.Web/AdventureWorks.Client.Web.csproj</AddToProject-param>
      <AddToProject-desc>A project file to add the generated files to.</AddToProject-desc>
      <AddToProject-category>Output</AddToProject-category>
      <CustomPath-param>
      </CustomPath-param>
      <CustomPath-desc>Path where to output override classes for the generated Views.
If not set then the OutputPath will be used. The path must contain {File} placeholder to output files by view.</CustomPath-desc>
      <CustomPath-category>Output</CustomPath-category>
      <NestCustomFile-param>True</NestCustomFile-param>
      <NestCustomFile-desc>Whether or not to nest custom file under the auto-generated base file in the project. Applies only if both files are output to the same directory.</NestCustomFile-desc>
      <NestCustomFile-type>System.Boolean</NestCustomFile-type>
      <NestCustomFile-category>Output</NestCustomFile-category>
      <OutputPath-param>../AdventureWorks.Client.Web/Views/{Module/}{File}</OutputPath-param>
      <OutputPath-desc>Path where to output files with generated views. Path must contain {File} placeholder.</OutputPath-desc>
      <OutputPath-category>Output</OutputPath-category>
      <MenuFile-param>../AdventureWorks.Client.Web/Web.sitemap</MenuFile-param>
      <MenuFile-desc>Path to the sitemap file to add the views to.</MenuFile-desc>
      <MenuFile-category>Output</MenuFile-category>
      <Namespace-param>AdventureWorks.Client.Web</Namespace-param>
      <Namespace-desc>Namespace for the generated pages and views.</Namespace-desc>
      <View-param>
      </View-param>
      <View-desc>The name of the view from the model to generate a search view for.</View-desc>
      <View-category>Selector</View-category>
      <IncludeInBuild>true</IncludeInBuild>
      <IndividualFiles>true</IndividualFiles>
      <GeneratorGroup>presentation</GeneratorGroup>
    </XomGenerator>
    <XomGenerator Include="$(XomegaHome14)Xsl\enum_cache.xsl">
      <Name>Lookup Cache Loaders</Name>
      <Folder>Static Data</Folder>
      <OutputPath-param>../AdventureWorks.Services.Common/CacheLoaders/{Module/}{File}.cs</OutputPath-param>
      <OutputPath-desc>Path where to output files with generated lookup cache loaders.
The path may contain {Module/} and {File} placeholders to output files by module and service respectively.</OutputPath-desc>
      <OutputPath-category>Output</OutputPath-category>
      <RegistryFile-param>../AdventureWorks.Services.Common/CacheLoaders/LookupCacheLoaders.cs</RegistryFile-param>
      <RegistryFile-desc>A path to the file for cache loaders resgistration.</RegistryFile-desc>
      <RegistryFile-category>Output</RegistryFile-category>
      <Namespace-param>
      </Namespace-param>
      <Namespace-desc>Namespace for the generated classes.</Namespace-desc>
      <AddToProject-param>../AdventureWorks.Services.Common/AdventureWorks.Services.Common.csproj</AddToProject-param>
      <AddToProject-desc>A project file to add the generated files to.</AddToProject-desc>
      <AddToProject-category>Output</AddToProject-category>
      <IncludeInBuild>true</IncludeInBuild>
      <IndividualFiles>true</IndividualFiles>
      <GeneratorGroup>services</GeneratorGroup>
    </XomGenerator>
    <XomGenerator Include="$(XomegaHome14)Xsl\enum_xml.xsl">
      <Name>Enumeration Data XML</Name>
      <Folder>Static Data</Folder>
      <OutputPath-param>../AdventureWorks.Services.Common/Enumerations/enumerations.xml</OutputPath-param>
      <OutputPath-desc>Path where to output generated XML file with enumerations.</OutputPath-desc>
      <OutputPath-category>Output</OutputPath-category>
      <AddToProject-param>../AdventureWorks.Services.Common/AdventureWorks.Services.Common.csproj</AddToProject-param>
      <AddToProject-desc>A project file to add the generated files to.</AddToProject-desc>
      <AddToProject-category>Output</AddToProject-category>
      <IncludeInBuild>true</IncludeInBuild>
    </XomGenerator>
    <XomGenerator Include="$(XomegaHome14)Xsl\enum_sql.xsl">
      <Name>Enumeration Reload SQL</Name>
      <Folder>Static Data</Folder>
      <DbCase>$(DbCase)</DbCase>
      <OutputPath-param>reload_enumerations.sql</OutputPath-param>
      <OutputPath-desc>Path where to output generated SQL script to reload enumerations.</OutputPath-desc>
      <OutputPath-category>Output</OutputPath-category>
      <IncludeInBuild>true</IncludeInBuild>
    </XomGenerator>
    <XomGenerator Include="$(XomegaHome14)Xsl\enum_const.xsl">
      <Name>Enumeration Constants</Name>
      <Folder>Static Data</Folder>
      <OutputPath-param>../AdventureWorks.Services.Common/Enumerations/Enumerations.cs</OutputPath-param>
      <OutputPath-desc>Path where to output generated file with enumeration constants.</OutputPath-desc>
      <OutputPath-category>Output</OutputPath-category>
      <AddToProject-param>../AdventureWorks.Services.Common/AdventureWorks.Services.Common.csproj</AddToProject-param>
      <AddToProject-desc>A project file to add the generated files to.</AddToProject-desc>
      <AddToProject-category>Output</AddToProject-category>
      <IncludeInBuild>true</IncludeInBuild>
    </XomGenerator>
  </ItemGroup>
  <ItemGroup>
    <XomFile Include="Framework\base_types.xom" />
    <XomFile Include="Framework\operators.xom" />
    <XomFile Include="global_config.xom" />
    <XomFile Include="Import\aw_build_version.xom" />
    <XomFile Include="Import\database_log.xom" />
    <XomFile Include="Import\error_log.xom" />
    <XomFile Include="Import\HumanResources\department.xom" />
    <XomFile Include="Import\HumanResources\employee.xom" />
    <XomFile Include="Import\HumanResources\employee_department_history.xom" />
    <XomFile Include="Import\HumanResources\employee_pay_history.xom" />
    <XomFile Include="Import\HumanResources\job_candidate.xom" />
    <XomFile Include="Import\HumanResources\shift.xom" />
    <XomFile Include="Import\Person\address.xom" />
    <XomFile Include="Import\Person\address_type.xom" />
    <XomFile Include="Import\Person\business_entity.xom" />
    <XomFile Include="Import\Person\business_entity_address.xom" />
    <XomFile Include="Import\Person\business_entity_contact.xom" />
    <XomFile Include="Import\Person\contact_type.xom" />
    <XomFile Include="Import\Person\country_region.xom" />
    <XomFile Include="Import\Person\email_address.xom" />
    <XomFile Include="Import\Person\password.xom" />
    <XomFile Include="Import\Person\person.xom" />
    <XomFile Include="Import\Person\person_phone.xom" />
    <XomFile Include="Import\Person\phone_number_type.xom" />
    <XomFile Include="Import\Person\state_province.xom" />
    <XomFile Include="Import\Production\bill_of_materials.xom" />
    <XomFile Include="Import\Production\culture.xom" />
    <XomFile Include="Import\Production\document.xom" />
    <XomFile Include="Import\Production\illustration.xom" />
    <XomFile Include="Import\Production\location.xom" />
    <XomFile Include="Import\Production\product.xom" />
    <XomFile Include="Import\Production\product_category.xom" />
    <XomFile Include="Import\Production\product_cost_history.xom" />
    <XomFile Include="Import\Production\product_description.xom" />
    <XomFile Include="Import\Production\product_document.xom" />
    <XomFile Include="Import\Production\product_inventory.xom" />
    <XomFile Include="Import\Production\product_list_price_history.xom" />
    <XomFile Include="Import\Production\product_model.xom" />
    <XomFile Include="Import\Production\product_model_illustration.xom" />
    <XomFile Include="Import\Production\product_model_product_description_culture.xom" />
    <XomFile Include="Import\Production\product_photo.xom" />
    <XomFile Include="Import\Production\product_product_photo.xom" />
    <XomFile Include="Import\Production\product_review.xom" />
    <XomFile Include="Import\Production\product_subcategory.xom" />
    <XomFile Include="Import\Production\scrap_reason.xom" />
    <XomFile Include="Import\Production\transaction_history.xom" />
    <XomFile Include="Import\Production\transaction_history_archive.xom" />
    <XomFile Include="Import\Production\unit_measure.xom" />
    <XomFile Include="Import\Production\work_order.xom" />
    <XomFile Include="Import\Production\work_order_routing.xom" />
    <XomFile Include="Import\Purchasing\product_vendor.xom" />
    <XomFile Include="Import\Purchasing\purchase_order_detail.xom" />
    <XomFile Include="Import\Purchasing\purchase_order_header.xom" />
    <XomFile Include="Import\Purchasing\ship_method.xom" />
    <XomFile Include="Import\Purchasing\vendor.xom" />
    <XomFile Include="Import\Sales\country_region_currency.xom" />
    <XomFile Include="Import\Sales\credit_card.xom" />
    <XomFile Include="Import\Sales\currency.xom" />
    <XomFile Include="Import\Sales\currency_rate.xom" />
    <XomFile Include="Import\Sales\customer.xom" />
    <XomFile Include="Import\Sales\person_credit_card.xom" />
    <XomFile Include="Import\Sales\sales_order.xom" />
    <XomFile Include="Import\Sales\sales_person.xom" />
    <XomFile Include="Import\Sales\sales_person_quota_history.xom" />
    <XomFile Include="Import\Sales\sales_reason.xom" />
    <XomFile Include="Import\Sales\sales_tax_rate.xom" />
    <XomFile Include="Import\Sales\sales_territory.xom" />
    <XomFile Include="Import\Sales\sales_territory_history.xom" />
    <XomFile Include="Import\Sales\shopping_cart_item.xom" />
    <XomFile Include="Import\Sales\special_offer.xom" />
    <XomFile Include="Import\Sales\special_offer_product.xom" />
    <XomFile Include="Import\Sales\store.xom" />
    <XomFile Include="Import\_types.xom" />
  </ItemGroup>
  <Import Project="$(XomegaHome14)Xomega.targets" />
</Project>