//---------------------------------------------------------------------------------------------
// This file was AUTO-GENERATED by "SPA Views" Xomega.Net generator.
//
// Manual CHANGES to this file WILL BE LOST when the code is regenerated.
//---------------------------------------------------------------------------------------------

import { SalesOrderObject } from 'DataObjects/Sales/SalesOrderObjectCustomized';
import { DetailsViewModel, ViewParams, DataRow, ViewModel, ViewEvent, ViewSelectionEvent } from 'xomega';
import * as controls from 'xomega-controls';

class SalesOrderView extends DetailsViewModel {

    public obj: SalesOrderObject;
    public activeTab = ko.observable('Customer');

    public constructor() {
        super();
        this.DetailsObject = this.obj = new SalesOrderObject();
    }

    public attached(view, parent) {
        if (this.Params[ViewParams.Mode] == ViewParams.ModePopup)
            controls.modalViewPopup(this, view);
        else if (this.Params[ViewParams.Mode] == ViewParams.ModeInline)
            controls.vSplitViewPopup(this, view);
    }

    protected lnkCustomerLookupLookUp_Params(): any {
        let vm = this;
        let params: any = {};
        params[ViewParams.Action] = ViewParams.ActionSelect;
        params[ViewParams.SelectionMode] = ViewParams.SelectionModeSingle;
        params["StoreNameOperator"] = "CONT";
        params["StoreName"] = vm.obj.CustomerObject.LookupObject.StoreName.EditStringValue();
        params["PersonNameOperator"] = "CONT";
        params["PersonName"] = vm.obj.CustomerObject.LookupObject.PersonName.EditStringValue();
        params[ViewParams.Mode] = ViewParams.ModePopup;
        params[ViewParams.Source] = "lnkCustomerLookupLookUp";
        return params;
    }

    public lnkCustomerLookupLookUp_Click() {
        if (!this.lnkCustomerLookupLookUp_Enabled()) return;
        let params = this.lnkCustomerLookupLookUp_Params();
        let vm = this;
        this.navigateTo('CustomerListView', params);
    }

    public lnkCustomerLookupLookUp_Enabled() {
        return true;
    }

    protected lnkCustomerLookupLookUp_HandleResult(selectedRows: Array<DataRow>) {
        if (!selectedRows == null || selectedRows.length != 1) return;
        let vm = this;
        let row: any = selectedRows[0];
        vm.obj.CustomerObject.CustomerId.InternalValue(row.CustomerId);
        vm.obj.CustomerObject.StoreId.InternalValue(row.StoreId);
        vm.obj.CustomerObject.StoreName.InternalValue(row.StoreName);
        vm.obj.CustomerObject.PersonId.InternalValue(row.PersonId);
        vm.obj.CustomerObject.PersonName.InternalValue(row.PersonName);
        vm.obj.CustomerObject.AccountNumber.InternalValue(row.AccountNumber);
        vm.obj.CustomerObject.TerritoryId.InternalValue(row.TerritoryId);
    }

    protected lnkDetailDetails_Params(data): any {
        let vm = this;
        let params: any = {};
        params["SalesOrderDetailId"] = data.SalesOrderDetailId;
        params[ViewParams.Mode] = ViewParams.ModePopup;
        params[ViewParams.Source] = "lnkDetailDetails";
        return params;
    }

    public lnkDetailDetails_Click(data) {
        if (!this.lnkDetailDetails_Enabled(data)) return;
        let params = this.lnkDetailDetails_Params(data);
        let vm = this;
        this.navigateTo('SalesOrderDetailView', params).then(function (success) {
            if (success) {
                let list = vm.obj.DetailList;
                list.toggleSelection(data);
            }
        });
    }

    public lnkDetailDetails_Enabled(data) {
        return true;
    }

    protected lnkDetailNew_Params(): any {
        let vm = this;
        let params: any = {};
        params[ViewParams.Action] = ViewParams.ActionCreate;
        params["SalesOrderId"] = vm.obj.SalesOrderId.EditStringValue();
        params[ViewParams.Mode] = ViewParams.ModePopup;
        params[ViewParams.Source] = "lnkDetailNew";
        return params;
    }

    public lnkDetailNew_Click() {
        if (!this.lnkDetailNew_Enabled()) return;
        let params = this.lnkDetailNew_Params();
        let vm = this;
        this.navigateTo('SalesOrderDetailView', params);
    }

    public lnkDetailNew_Enabled() {
        return !this.obj.IsNew();
    }

    protected onChildEvent(child: ViewModel, e: ViewEvent) {
        let vm = this;
        if (e instanceof ViewSelectionEvent && child.Params && child.Params[ViewParams.Source] === 'lnkCustomerLookupLookUp')
            vm.lnkCustomerLookupLookUp_HandleResult(e.SelectedRows);
        if (e.isClosed() && child.Params && child.Params[ViewParams.Source] === 'lnkDetailDetails')
            vm.obj.DetailList.clearSelectedRows();
        super.onChildEvent(child, e);
    }
}

export = SalesOrderView;
