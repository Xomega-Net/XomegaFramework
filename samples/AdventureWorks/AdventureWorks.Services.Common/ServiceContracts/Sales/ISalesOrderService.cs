//---------------------------------------------------------------------------------------------
// This file was AUTO-GENERATED by "Service Contracts" Xomega.Net generator.
//
// Manual CHANGES to this file WILL BE LOST when the code is regenerated.
//---------------------------------------------------------------------------------------------

using System;
using System.Collections.Generic;

namespace AdventureWorks.Services
{
    #region ISalesOrderService interface

    public interface ISalesOrderService
    {

        ///<summary>
        /// Reads the values of a Sales Order object by its key.
        ///</summary>
        SalesOrder_ReadOutput Read(int _salesOrderId);

        ///<summary>
        /// Creates a new Sales Order object using the specified data.
        ///</summary>
        SalesOrder_CreateOutput Create(SalesOrder_CreateInput _data);

        ///<summary>
        /// Updates existing Sales Order object using the specified data.
        ///</summary>
        SalesOrder_UpdateOutput Update(int _salesOrderId, SalesOrder_UpdateInput_Data _data);

        ///<summary>
        /// Deletes the specified Sales Order object.
        ///</summary>
        void Delete(int _salesOrderId);

        ///<summary>
        /// Reads a list of Sales Order objects based on the specified criteria.
        ///</summary>
        IEnumerable<SalesOrder_ReadListOutput> ReadList(SalesOrder_ReadListInput_Criteria _criteria);

        ///<summary>
        /// Reads the values of a Sales Order Detail object by its key.
        ///</summary>
        SalesOrderDetail_ReadOutput Detail_Read(int _salesOrderDetailId);

        ///<summary>
        /// Creates a new Sales Order Detail object using the specified data.
        ///</summary>
        SalesOrderDetail_CreateOutput Detail_Create(int _salesOrderId, SalesOrderDetail_CreateInput_Data _data);

        ///<summary>
        /// Updates existing Sales Order Detail object using the specified data.
        ///</summary>
        void Detail_Update(int _salesOrderDetailId, SalesOrderDetail_UpdateInput_Data _data);

        ///<summary>
        /// Deletes the specified Sales Order Detail object.
        ///</summary>
        void Detail_Delete(int _salesOrderDetailId);

        ///<summary>
        /// Reads a list of Sales Order Detail objects based on the specified criteria.
        ///</summary>
        IEnumerable<SalesOrderDetail_ReadListOutput> Detail_ReadList(int _salesOrderId);

    }
    #endregion

    #region SalesOrder_ReadOutput structure

    ///<summary>
    /// The output structure of operation ISalesOrderService.Read.
    ///</summary>
    public class SalesOrder_ReadOutput
    {
        public string SalesOrderNumber { get; set; }
        public DateTime OrderDate { get; set; }
        public byte Status { get; set; }
        public bool OnlineOrderFlag { get; set; }
        public string PurchaseOrderNumber { get; set; }
        public string AccountNumber { get; set; }
        public CustomerInfo Customer { get; set; }
        public DateTime? ShipDate { get; set; }
        public PaymentInfo Payment { get; set; }
        public SalesInfo Sales { get; set; }
        public string Comment { get; set; }
        public byte RevisionNumber { get; set; }
        public DateTime ModifiedDate { get; set; }
    }
    #endregion

    #region SalesOrder_CreateInput structure

    ///<summary>
    /// The input structure of operation ISalesOrderService.Create.
    ///</summary>
    public class SalesOrder_CreateInput
    {
        public byte Status { get; set; }
        public bool OnlineOrderFlag { get; set; }
        public string PurchaseOrderNumber { get; set; }
        public string AccountNumber { get; set; }
        public CustomerUpdate Customer { get; set; }
        public DateTime? ShipDate { get; set; }
        public PaymentUpdate Payment { get; set; }
        public SalesInfo Sales { get; set; }
        public string Comment { get; set; }
    }
    #endregion

    #region SalesOrder_CreateOutput structure

    ///<summary>
    /// The output structure of operation ISalesOrderService.Create.
    ///</summary>
    public class SalesOrder_CreateOutput
    {
        public int SalesOrderId { get; set; }
        public string SalesOrderNumber { get; set; }
        public DateTime OrderDate { get; set; }
        public byte RevisionNumber { get; set; }
        public DateTime ModifiedDate { get; set; }
    }
    #endregion

    #region SalesOrder_UpdateInput_Data structure

    ///<summary>
    /// Structure of parameter Data of the input structure of operation ISalesOrderService.Update.
    ///</summary>
    public class SalesOrder_UpdateInput_Data
    {
        public byte Status { get; set; }
        public bool OnlineOrderFlag { get; set; }
        public string PurchaseOrderNumber { get; set; }
        public string AccountNumber { get; set; }
        public CustomerUpdate Customer { get; set; }
        public DateTime? ShipDate { get; set; }
        public PaymentUpdate Payment { get; set; }
        public SalesInfo Sales { get; set; }
        public string Comment { get; set; }
    }
    #endregion

    #region SalesOrder_UpdateOutput structure

    ///<summary>
    /// The output structure of operation ISalesOrderService.Update.
    ///</summary>
    public class SalesOrder_UpdateOutput
    {
        public byte RevisionNumber { get; set; }
        public DateTime ModifiedDate { get; set; }
    }
    #endregion

    #region SalesOrder_ReadListInput_Criteria structure

    ///<summary>
    /// Structure of parameter Criteria of the input structure of operation ISalesOrderService.ReadList.
    ///</summary>
    public class SalesOrder_ReadListInput_Criteria
    {
        ///<summary>
        /// Comparison operator for the corresponding Sales Order Number criteria.
        ///</summary>
        public string SalesOrderNumberOperator { get; set; }
        public string SalesOrderNumber { get; set; }
        ///<summary>
        /// Comparison operator for the corresponding Status criteria.
        ///</summary>
        public string StatusOperator { get; set; }
        public IEnumerable<byte> Status { get; set; }
        ///<summary>
        /// Comparison operator for the corresponding Order Date criteria.
        ///</summary>
        public string OrderDateOperator { get; set; }
        public DateTime? OrderDate { get; set; }
        ///<summary>
        /// End of range for the corresponding Order Date criteria for the BETWEEN operator.
        ///</summary>
        public DateTime? OrderDate2 { get; set; }
        ///<summary>
        /// Comparison operator for the corresponding Due Date criteria.
        ///</summary>
        public string DueDateOperator { get; set; }
        public DateTime? DueDate { get; set; }
        ///<summary>
        /// End of range for the corresponding Due Date criteria for the BETWEEN operator.
        ///</summary>
        public DateTime? DueDate2 { get; set; }
        ///<summary>
        /// Comparison operator for the corresponding Total Due criteria.
        ///</summary>
        public string TotalDueOperator { get; set; }
        public decimal? TotalDue { get; set; }
        ///<summary>
        /// End of range for the corresponding Total Due criteria for the BETWEEN operator.
        ///</summary>
        public decimal? TotalDue2 { get; set; }
        ///<summary>
        /// Comparison operator for the corresponding Customer Store criteria.
        ///</summary>
        public string CustomerStoreOperator { get; set; }
        public string CustomerStore { get; set; }
        ///<summary>
        /// Comparison operator for the corresponding Customer Name criteria.
        ///</summary>
        public string CustomerNameOperator { get; set; }
        public string CustomerName { get; set; }
        public string GlobalRegion { get; set; }
        ///<summary>
        /// Comparison operator for the corresponding Territory Id criteria.
        ///</summary>
        public string TerritoryIdOperator { get; set; }
        public int? TerritoryId { get; set; }
        ///<summary>
        /// Comparison operator for the corresponding Sales Person Id criteria.
        ///</summary>
        public string SalesPersonIdOperator { get; set; }
        public IEnumerable<int> SalesPersonId { get; set; }
    }
    #endregion

    #region SalesOrder_ReadListOutput structure

    ///<summary>
    /// The output structure of operation ISalesOrderService.ReadList.
    ///</summary>
    public class SalesOrder_ReadListOutput
    {
        public int SalesOrderId { get; set; }
        public string SalesOrderNumber { get; set; }
        public byte Status { get; set; }
        public DateTime OrderDate { get; set; }
        public DateTime? ShipDate { get; set; }
        public DateTime DueDate { get; set; }
        public decimal TotalDue { get; set; }
        public bool OnlineOrderFlag { get; set; }
        public string CustomerStore { get; set; }
        public string CustomerName { get; set; }
        public int? SalesPersonId { get; set; }
        public int? TerritoryId { get; set; }
    }
    #endregion

    #region SalesOrderDetail_ReadOutput structure

    ///<summary>
    /// The output structure of operation IDetailService.Detail_Read.
    ///</summary>
    public class SalesOrderDetail_ReadOutput
    {
        public int SalesOrderId { get; set; }
        public string CarrierTrackingNumber { get; set; }
        public short OrderQty { get; set; }
        public int SpecialOfferId { get; set; }
        public int ProductId { get; set; }
        public decimal UnitPrice { get; set; }
        public decimal UnitPriceDiscount { get; set; }
        public decimal LineTotal { get; set; }
        public Guid Rowguid { get; set; }
        public DateTime ModifiedDate { get; set; }
    }
    #endregion

    #region SalesOrderDetail_CreateInput_Data structure

    ///<summary>
    /// Structure of parameter Data of the input structure of operation IDetailService.Detail_Create.
    ///</summary>
    public class SalesOrderDetail_CreateInput_Data
    {
        public string CarrierTrackingNumber { get; set; }
        public short OrderQty { get; set; }
        public int SpecialOfferId { get; set; }
        public int ProductId { get; set; }
        public decimal UnitPrice { get; set; }
        public decimal UnitPriceDiscount { get; set; }
        public decimal LineTotal { get; set; }
        public Guid Rowguid { get; set; }
        public DateTime ModifiedDate { get; set; }
    }
    #endregion

    #region SalesOrderDetail_CreateOutput structure

    ///<summary>
    /// The output structure of operation IDetailService.Detail_Create.
    ///</summary>
    public class SalesOrderDetail_CreateOutput
    {
        public int SalesOrderDetailId { get; set; }
    }
    #endregion

    #region SalesOrderDetail_UpdateInput_Data structure

    ///<summary>
    /// Structure of parameter Data of the input structure of operation IDetailService.Detail_Update.
    ///</summary>
    public class SalesOrderDetail_UpdateInput_Data
    {
        public string CarrierTrackingNumber { get; set; }
        public short OrderQty { get; set; }
        public int SpecialOfferId { get; set; }
        public int ProductId { get; set; }
        public decimal UnitPrice { get; set; }
        public decimal UnitPriceDiscount { get; set; }
        public decimal LineTotal { get; set; }
        public Guid Rowguid { get; set; }
        public DateTime ModifiedDate { get; set; }
    }
    #endregion

    #region SalesOrderDetail_ReadListOutput structure

    ///<summary>
    /// The output structure of operation IDetailService.Detail_ReadList.
    ///</summary>
    public class SalesOrderDetail_ReadListOutput
    {
        public int SalesOrderDetailId { get; set; }
        public int Product { get; set; }
        public short OrderQty { get; set; }
        public decimal UnitPrice { get; set; }
        public decimal UnitPriceDiscount { get; set; }
        public int SpecialOffer { get; set; }
        public decimal LineTotal { get; set; }
        public string CarrierTrackingNumber { get; set; }
    }
    #endregion

}