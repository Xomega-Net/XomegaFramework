//---------------------------------------------------------------------------------------------
// This file was AUTO-GENERATED by "WPF Views" Xomega.Net generator.
//
// Manual CHANGES to this file WILL BE LOST when the code is regenerated.
//---------------------------------------------------------------------------------------------

using Microsoft.Extensions.DependencyInjection;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Input;
using Xomega.Framework.Views;
using AdventureWorks.Client.ViewModels;

namespace AdventureWorks.Client.Wpf
{
    public partial class SalesOrderView
    {
        public SalesOrderView()
        {
            lnkCustomerLookupLookUp_Command = new RelayCommand<object>(lnkCustomerLookupLookUp_Execute, lnkCustomerLookupLookUp_Enabled);
            lnkDetailDetails_Command = new RelayCommand<int?>(lnkDetailDetails_Execute, lnkDetailDetails_Enabled);
            lnkDetailNew_Command = new RelayCommand<object>(lnkDetailNew_Execute, lnkDetailNew_Enabled);
            InitializeComponent();
        }

        #region lnkCustomerLookupLookUp_Command

        public ICommand lnkCustomerLookupLookUp_Command { get; set; }

        public virtual void lnkCustomerLookupLookUp_Execute(object arg)
        {
            SalesOrderViewModel vm = Model as SalesOrderViewModel;
            if (vm == null) return;
            WPFView cur = null as CustomerListView;
            WPFView tgt = cur ?? vm.ServiceProvider.GetService<CustomerListView>();
            tgt.Owner = this;
            vm.lnkCustomerLookupLookUp_Command(tgt, cur);
        }
        public virtual bool lnkCustomerLookupLookUp_Enabled(object arg)
        {
            SalesOrderViewModel c = Model as SalesOrderViewModel;
            return c == null ? false : c.lnkCustomerLookupLookUp_Enabled();
        }
        #endregion

        #region lnkDetailDetails_Command

        public ICommand lnkDetailDetails_Command { get; set; }

        public virtual void lnkDetailDetails_Execute(int? row)
        {
            SalesOrderViewModel vm = Model as SalesOrderViewModel;
            if (vm == null) return;
            WPFView cur = null as SalesOrderDetailView;
            WPFView tgt = cur ?? vm.ServiceProvider.GetService<SalesOrderDetailView>();
            tgt.Owner = this;
            vm.lnkDetailDetails_Command(tgt, cur, row.Value);
        }
        public virtual bool lnkDetailDetails_Enabled(int? row)
        {
            SalesOrderViewModel c = Model as SalesOrderViewModel;
            return c == null ? false : c.lnkDetailDetails_Enabled(row.Value);
        }
        #endregion

        #region lnkDetailNew_Command

        public ICommand lnkDetailNew_Command { get; set; }

        public virtual void lnkDetailNew_Execute(object arg)
        {
            SalesOrderViewModel vm = Model as SalesOrderViewModel;
            if (vm == null) return;
            WPFView cur = null as SalesOrderDetailView;
            WPFView tgt = cur ?? vm.ServiceProvider.GetService<SalesOrderDetailView>();
            tgt.Owner = this;
            vm.lnkDetailNew_Command(tgt, cur);
        }
        public virtual bool lnkDetailNew_Enabled(object arg)
        {
            SalesOrderViewModel c = Model as SalesOrderViewModel;
            return c == null ? false : c.lnkDetailNew_Enabled();
        }
        #endregion

        protected override Button CloseButton { get { return btnClose; } }

        protected override Button DeleteButton { get { return btnDelete; } }
        protected override Button SaveButton { get { return btnSave; } }
    }
}